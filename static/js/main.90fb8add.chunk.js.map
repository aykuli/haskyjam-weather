{"version":3,"sources":["themes/theme.ts","constantas/api-keys.ts","services/get-coordinates.ts","services/get-weather.ts","utils/temperature-fit.ts","redux/actions.ts","redux/action-types.ts","services/opencagedata.ts","constantas/common.ts","components/navbar.tsx","services/color-generator.ts","components/current-weather.tsx","components/saved-cities.tsx","components/week.tsx","components/map-marker.tsx","components/map.tsx","components/day-weather.tsx","components/popup-message.tsx","components/error-indicator.tsx","components/error-boundry.tsx","components/app.tsx","redux/reducer.ts","services/fake-history.ts","redux/middleware.ts","redux/store.ts","index.tsx"],"names":["theme","createMuiTheme","palette","type","primary","main","contrastText","secondary","text","background","default","typography","fontFamily","fontSize","h1","lineHeight","fontWeight","color","margin","h2","h3","padding","h6","body1","body2","button","caption","spacing","factor","overrides","MuiCssBaseline","fontStyle","MuiInput","underline","borderBottom","responsiveFontSizes","OPENCAGEDATA_KEY","getCoordinates","a","fetch","response","json","data","city","country","loc","split","lat","lng","latitude","Number","longitude","getWeatherByCoordinates","lang","url","temperatureZeroFit","n","toString","numberFit","toFixed","refreshCoordinates","coordinates","changeCity","changeCountry","addCityToHistory","history","settlement","headers","NAVBAR_BTNS","useStyles","makeStyles","createStyles","root","display","justifyContent","alignItems","flexWrap","backgroundColor","activeTab","dark","btnGroup","marginBottom","search","position","borderRadius","shape","fade","common","white","marginLeft","width","breakpoints","up","searchIcon","height","top","left","pointerEvents","inputRoot","minWidth","mapDispatchToProps","changeCurrentTab","newTab","currentTab","setCoordinates","setCity","str","setCountry","connect","state","props","styles","handleTab","e","innerText","target","className","ButtonGroup","size","aria-label","map","btn","Button","key","onClick","token","query","autoload","placeholder","onChange","console","log","forwardGeocoding","then","results","geometry","getRandomColor","i","Math","floor","random","flexDirection","boxShadow","shadows","addCity","zIndex","right","setNewCityToHistory","temperature","weatherInfo","fakerator","Fakerator","date","Date","Intl","DateTimeFormat","year","month","day","format","getDate","Typography","variant","component","Tooltip","title","Fab","id","masked","container","gridTemplateColumns","gridGap","cursor","light","opacity","showHistory","deleteBtn","deleteAllBtn","deleteCityFromHistory","removeCityToHistory","setEmptyHistory","showList","length","slice","reverse","Alert","severity","cityData","Card","style","handleRequest","CardContent","CardActions","weekDays","textAlign","weatherWeek","today","firstDay","getTime","nextWeek","option","week","temperatureMin","temperatureMax","push","weekDay","toLocaleDateString","weekday","item","temperatureFitted","Paper","elevation","marker","transform","user","outline","fill","error","popup","maxWidth","temperatureCurrent","useState","isShowPopup","setIsShowPopup","onKeyDown","role","tabIndex","offsetLeft","offsetTop","onClose","closeOnClick","closeButton","anchor","mapContainer","marginTop","down","mapControllers","btnGroupAndTheme","fullscreenControl","bottom","scaler","modalWrap","geolocateStyle","zoom","bearing","pitch","viewport","setViewport","useEffect","viewportCurrent","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","gotoCurrentPlace","onViewportChange","mapboxApiAccessToken","mapStyle","attributionControl","unit","positionOptions","enableHighAccuracy","trackUserLocation","minHeight","info","marginRight","table","headRow","tableHeader","weather48Hours","level","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","hour","time","summary","windSpeed","timeConverted","isRender","getHours","windFitted","getMinutes","paddingTop","msgWrap","flexGrow","border","PopupMessage","msg","errorContainer","titleWrap","ErrorIndicator","ErrorBoundry","isWasError","this","setState","children","Component","sceleton","addBtn","setWeatherInfo","setCurrentTemperature","numb","setWeather48hours","setWeatherWeek","setMsg","timerId","catch","setTimeout","clearTimeout","reverseGeocoding","components","window","pushState","page","weather","hourly","daily","numberFitted","currently","txt","componentMaps","Map","set","ThemeProvider","CssBaseline","Skeleton","get","ls","localStorage","getItem","JSON","parse","initialState","reducer","action","filter","middleware","next","store","getState","newHistory","removeItem","setItem","stringify","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90fb8add.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport '@openfonts/ubuntu-condensed_cyrillic';\n\nconst ubuntuCondensed = {\n  fontFamily: 'Ubuntu Condensed',\n  fontStyle: 'normal',\n  fontWeight: '400',\n};\n// palette created with material palette generator https://material.io/inline-tools/color/\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#4ed6b8',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#ffffff', // Complementary color to primary\n      contrastText: '#3d4451',\n    },\n    text: {\n      primary: '#3d4451',\n      secondary: '#ffffff',\n    },\n    background: {\n      default: '#ffffff',\n    },\n  },\n  typography: {\n    fontFamily: 'Ubuntu Condensed',\n    fontSize: 16,\n    h1: {\n      fontSize: '3.5rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 30px',\n    },\n    h2: {\n      fontSize: '2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '20px 0 20px',\n    },\n    h3: {\n      fontSize: '1.6rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      padding: '5px 0 5px',\n    },\n    h6: {\n      fontSize: '1.2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 10px',\n    },\n    body1: {\n      fontSize: '1.6rem',\n      lineHeight: '1.6',\n      color: '#ffffff',\n    },\n    body2: {\n      fontSize: '1.6rem',\n      lineHeight: '1.4',\n      color: '#3d4451',\n      padding: '5px 0 5px',\n    },\n    button: {\n      fontSize: '1rem',\n      lineHeight: '1.4',\n      color: '#403d51',\n    },\n    caption: {\n      fontSize: '1.2rem',\n      lineHeight: '1',\n      color: '#000000',\n    },\n  },\n  spacing: (factor) => `${0.25 * factor}rem`, // (Bootstrap strategy)\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@font-face': [ubuntuCondensed],\n      },\n    },\n    MuiInput: {\n      underline: {\n        '&&&&:hover:before': {\n          borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\n        },\n      },\n    },\n  },\n});\n\nexport default responsiveFontSizes(theme);\n","export const IP_INFO_KEY = 'abb04b3b63728f';\nexport const OPEN_WEATHER_KEY = '612f3911b66f3c4db9ea235ee7c23612';\nexport const DARKSKY_KEY = 'eefc04453f3143682c3c88d3669c3546';\nexport const MAPBOX_TOKEN =\n  'pk.eyJ1IjoiYXlrdWxpIiwiYSI6ImNrM2pybXF5MjA0OWczcG14ZzdxNXBlYmMifQ.tYv6CcePP02kbiXAJ-p_Mw';\nexport const DADATA = '41abac0b9197748c810ee5b27d23d04998ecc55b';\nexport const OPENCAGEDATA_KEY = '08e88a2c40fb4a34966ad1a41752ff28';\n\n// TODO переснести в env=production env-cmd\n","import { IP_INFO_KEY } from '../constantas/api-keys';\r\n\r\nconst getCoordinates = async () => {\r\n  const response = await fetch(`https://ipinfo.io?token=${IP_INFO_KEY}`);\r\n  const data = await response.json();\r\n  const { city, country } = data;\r\n  const [lat, lng] = data.loc.split(',');\r\n  return {\r\n    latitude: Number(lat),\r\n    longitude: Number(lng),\r\n    city,\r\n    country,\r\n  };\r\n};\r\n\r\nexport default getCoordinates;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { OPEN_WEATHER_KEY, DARKSKY_KEY } from '../constantas/api-keys';\r\n\r\ninterface RequestCors {\r\n  type: string;\r\n}\r\n\r\nconst getWeatherByCoordinates = async (latitude: number, longitude: number, lang: string) => {\r\n  // try to fetcj to opencagedata. Work bad\r\n  // const units = 'metric';\r\n  // const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=${OPEN_WEATHER_KEY}&lang=${lang}&units=${units}`;\r\n  // const response = await fetch(url);\r\n\r\n  const unit = 'si';\r\n  const url = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${DARKSKY_KEY}/${latitude},${longitude}?lang=${lang}&units=${unit}`;\r\n\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport default getWeatherByCoordinates;\r\n","export const temperatureZeroFit = (n: number): number => (n.toString() === '-0' ? 0 : n);\r\nexport const numberFit = (n: number): number => Number(n.toFixed(0));\r\n","import {\r\n  REFRESH_COORDINATES,\r\n  CHANGE_CURRENT_TAB,\r\n  CHANGE_CITY,\r\n  CHANGE_COUNTRY,\r\n  CHANGE_TODAY_WEATHER_INFO,\r\n  CHANGE_CURRENT_TEMPERATURE,\r\n  CHANGE_WEATHER_FOR_NEXT_48_HOURS,\r\n  CHANGE_WEEK_WEATHER,\r\n  ADD_CITY_TO_HISTORY,\r\n  DELETE_CITY_FROM_HISTORY,\r\n  CLEAR_HISTORY,\r\n} from './action-types';\r\nimport { HistoryItem, Weather48HoursProp, WeatherWeekProp, Coordinates } from '../types';\r\n\r\ninterface CoordinatesProps {\r\n  type: string;\r\n  coordinates: Coordinates;\r\n}\r\n\r\ninterface CurrentTabProps {\r\n  type: string;\r\n  currentTab: string;\r\n}\r\n\r\ninterface CityProps {\r\n  type: string;\r\n  city: string;\r\n}\r\n\r\ninterface CountryProps {\r\n  type: string;\r\n  country: string;\r\n}\r\n\r\ninterface WeatherInfoProps {\r\n  type: string;\r\n  weatherInfo: string;\r\n}\r\n\r\ninterface TemperatureProps {\r\n  type: string;\r\n  temperature: number;\r\n}\r\n\r\ninterface Weather48Props {\r\n  type: string;\r\n  weather48Hours: Weather48HoursProp | null;\r\n}\r\n\r\ninterface WeekWeatherProps {\r\n  type: string;\r\n  weatherWeek: any | null;\r\n}\r\n\r\ninterface RemoveCityProps {\r\n  type: string;\r\n  id: string;\r\n}\r\n\r\ninterface HistoryProps {\r\n  type: string;\r\n  history: HistoryItem;\r\n}\r\n\r\ninterface EmptyHistoryProps {\r\n  type: string;\r\n  history: Array<HistoryItem>;\r\n}\r\n\r\nexport const refreshCoordinates = ({ latitude, longitude }: Coordinates): CoordinatesProps => {\r\n  return {\r\n    type: REFRESH_COORDINATES,\r\n    coordinates: { latitude, longitude },\r\n  };\r\n};\r\n\r\nexport const changeCurrentTab = (currentTab: string): CurrentTabProps => {\r\n  return {\r\n    type: CHANGE_CURRENT_TAB,\r\n    currentTab,\r\n  };\r\n};\r\n\r\nexport const changeCity = (city: string): CityProps => {\r\n  return {\r\n    type: CHANGE_CITY,\r\n    city,\r\n  };\r\n};\r\n\r\nexport const changeCountry = (country: string): CountryProps => {\r\n  return {\r\n    type: CHANGE_COUNTRY,\r\n    country,\r\n  };\r\n};\r\n\r\nexport const changeWeatherInfo = (weatherInfo: string): WeatherInfoProps => {\r\n  return {\r\n    type: CHANGE_TODAY_WEATHER_INFO,\r\n    weatherInfo,\r\n  };\r\n};\r\n\r\nexport const changeCurrentTemperature = (temperature: number): TemperatureProps => {\r\n  return {\r\n    type: CHANGE_CURRENT_TEMPERATURE,\r\n    temperature,\r\n  };\r\n};\r\n\r\nexport const changeWeatherForNext48Hours = (weather48Hours: Weather48HoursProp): Weather48Props => {\r\n  return {\r\n    type: CHANGE_WEATHER_FOR_NEXT_48_HOURS,\r\n    weather48Hours,\r\n  };\r\n};\r\n\r\nexport const changeWeatherWeek = (weatherWeek: WeatherWeekProp): WeekWeatherProps => {\r\n  return {\r\n    type: CHANGE_WEEK_WEATHER,\r\n    weatherWeek,\r\n  };\r\n};\r\n\r\nexport const addCityToHistory = (history: HistoryItem): HistoryProps => {\r\n  return {\r\n    type: ADD_CITY_TO_HISTORY,\r\n    history,\r\n  };\r\n};\r\n\r\nexport const removeCityToHistory = (id: string): RemoveCityProps => {\r\n  console.log('id: ', id);\r\n  return {\r\n    type: DELETE_CITY_FROM_HISTORY,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const clearHistory = (): EmptyHistoryProps => {\r\n  return {\r\n    type: CLEAR_HISTORY,\r\n    history: [],\r\n  };\r\n};\r\n","export const REFRESH_COORDINATES = 'REFRESH_COORDINATES';\r\nexport const CHANGE_CURRENT_TAB = 'CHANGE_CURRENT_TAB';\r\nexport const CHANGE_CITY = 'CHANGE_CITY';\r\nexport const CHANGE_COUNTRY = 'CHANGE_COUNTRY';\r\nexport const CHANGE_TODAY_WEATHER_INFO = 'CHANGE_TODAY_WEATHER_INFO';\r\nexport const CHANGE_CURRENT_TEMPERATURE = 'CHANGE_CURRENT_TEMPERATURE';\r\nexport const CHANGE_WEATHER_FOR_NEXT_48_HOURS = 'CHANGE_WEATHER_FOR_NEXT_48_HOURS';\r\nexport const CHANGE_WEEK_WEATHER = 'CHANGE_WEEK_WEATHER';\r\nexport const ADD_CITY_TO_HISTORY = 'ADD_CITY_TO_HISTORY';\r\nexport const DELETE_CITY_FROM_HISTORY = 'DELETE_CITY_FROM_HISTORY';\r\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\r\n","import { OPENCAGEDATA_KEY } from '../constantas/api-keys';\r\n\r\nasync function forwardGeocoding(settlement: string, lang = 'ru') {\r\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${settlement}&countrycode=${lang}&key=${OPENCAGEDATA_KEY}&language=${lang}&pretty=1&no_annotations=1`;\r\n  const headers: any = { 'Content-Type': 'application/json' };\r\n\r\n  const response = await fetch(url, headers);\r\n  return response.json();\r\n}\r\n\r\nasync function reverseGeocoding(latitude: number, longitude: number, lang = 'ru') {\r\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitude}%2C${longitude}&key=${OPENCAGEDATA_KEY}&language=${lang}&pretty=1`;\r\n  const response = await fetch(url);\r\n  return response.json();\r\n}\r\n\r\nexport { forwardGeocoding, reverseGeocoding };\r\n","export const NAVBAR_BTNS = ['ИСТОРИЯ', 'СЕГОДНЯ', 'ЗАВТРА', 'НЕДЕЛЯ'];\nexport const CITIES_LIST = 'CITIES_LIST';\nexport const SEARCH_PLACEHOLDER = 'Введите адрес для поиска';\nexport const FETCH_WEATHER_FAILED =\n  'Сервис запроса погоды не работает. Просим перезагрузить страницу.';\nexport const FETCH_GEOCODING_FAILED =\n  'Сервис геолокации не работает. Просим перезагрузить страницу.';\nexport const FETCH_COORDINATES_FAILED =\n  'Коориданты не определились. Может у вас включен запрет на определение координат по IP';\n","/* eslint-disable no-useless-computed-key */\r\nimport React from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { ReactDadata } from 'react-dadata';\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles, fade, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport { NAVBAR_BTNS, SEARCH_PLACEHOLDER } from '../constantas/common';\r\nimport { DADATA } from '../constantas/api-keys';\r\n\r\nimport { Coordinates, DadataSuggestion } from '../types';\r\n\r\nimport {\r\n  changeCurrentTab as changeTab,\r\n  refreshCoordinates,\r\n  changeCity,\r\n  changeCountry,\r\n} from '../redux/actions';\r\nimport { forwardGeocoding } from '../services/opencagedata';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'flex-end',\r\n      flexWrap: 'wrap',\r\n      backgroundColor: theme.palette.primary.main,\r\n      padding: '10px 40px',\r\n    },\r\n    activeTab: {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    btnGroup: {\r\n      ['@media (max-width: 624px)']: {\r\n        marginBottom: 20,\r\n        margin: 'auto',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n      ['@media (max-width: 624px)']: {\r\n        marginBottom: 10,\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: -40,\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      minWidth: 250,\r\n      width: '100%',\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\ninterface MapStateProps {\r\n  currentTab: string;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setCoordinates: (data: Coordinates) => void;\r\n  setCity: (str: string) => void;\r\n  setCountry: (str: string) => void;\r\n  changeCurrentTab: (newTab: string) => void;\r\n}\r\n\r\ntype AppProps = MapStateProps & DispatchProps;\r\n\r\nconst Navbar = (props: AppProps) => {\r\n  const { changeCurrentTab, currentTab, setCoordinates } = props;\r\n\r\n  const styles = useStyles();\r\n\r\n  const handleTab = (\r\n    e: React.MouseEvent<HTMLButtonElement> | React.KeyboardEvent<HTMLButtonElement>\r\n  ) => {\r\n    const { innerText } = e.target as HTMLButtonElement;\r\n    changeCurrentTab(innerText);\r\n  };\r\n\r\n  const handleSearch = (e: DadataSuggestion) => {\r\n    console.log('1: ', e);\r\n    const settlement = e.data.city;\r\n    forwardGeocoding(settlement).then((data) => {\r\n      const coordinates = data.results[0].geometry;\r\n      setCoordinates({ latitude: coordinates.lat, longitude: coordinates.lng });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <ButtonGroup\r\n        size=\"large\"\r\n        color=\"secondary\"\r\n        aria-label=\"wheather for today, tomorrow or for week\"\r\n        className={styles.btnGroup}\r\n      >\r\n        {NAVBAR_BTNS.map((btn) => {\r\n          return (\r\n            <Button\r\n              key={btn}\r\n              onClick={handleTab}\r\n              className={btn === currentTab ? styles.activeTab : ''}\r\n            >\r\n              {btn}\r\n            </Button>\r\n          );\r\n        })}\r\n      </ButtonGroup>\r\n      <div className={styles.search}>\r\n        <div className={styles.searchIcon}>\r\n          <SearchIcon color=\"secondary\" />\r\n        </div>\r\n        <div className={styles.inputRoot}>\r\n          <ReactDadata\r\n            token={DADATA}\r\n            query=\"\"\r\n            autoload\r\n            placeholder={SEARCH_PLACEHOLDER}\r\n            onChange={handleSearch}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  currentTab: state.currentTab,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeCurrentTab: (newTab: string) => changeTab(newTab),\r\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\r\n  setCity: (str: string) => changeCity(str),\r\n  setCountry: (str: string) => changeCountry(str),\r\n};\r\n\r\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","const getRandomColor = () => {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i += 1) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n\r\nexport default getRandomColor;\r\n","import React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography, Fab, Tooltip } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fakerator from 'fakerator';\n\nimport getRandomColor from '../services/color-generator';\nimport { addCityToHistory } from '../redux/actions';\nimport { Coordinates, HistoryItem } from '../types';\n\n// TODO icons\nconst useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    boxShadow: theme.shadows[1],\n  },\n  addCity: {\n    position: 'absolute',\n    zIndex: 1,\n    top: 10,\n    right: 10,\n  },\n}));\n\nconst getDate = (lang: string) => {\n  const date = new Date();\n  const formatter = new Intl.DateTimeFormat(lang, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\n  return formatter.format(date);\n};\n\ninterface MapStateProps {\n  city: string;\n  country: string;\n  temperature: number;\n  weatherInfo: string;\n  coordinates: Coordinates;\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (item: HistoryItem) => void;\n}\n\ntype Props = MapStateProps & DispatchProps;\n\nconst CurrentWeather = (props: Props) => {\n  const { temperature, city, country, weatherInfo, coordinates, setNewCityToHistory } = props;\n\n  const fakerator = Fakerator('en-EN');\n\n  const handleAddCity = () => {\n    const id = fakerator.random.masked('aaa-AAA_999999:*');\n    const color = getRandomColor();\n    setNewCityToHistory({\n      id,\n      city,\n      coordinates,\n      color,\n    });\n  };\n\n  const styles = useStyles();\n  const date = getDate('ru');\n\n  return (\n    <div className={styles.main}>\n      <Typography variant=\"h1\" component=\"p\">{`${temperature} °C`}</Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {city ? `${city}, ` : ''}\n        {country ? `${country}` : ''}\n      </Typography>\n      <>\n        <Typography variant=\"body2\" component=\"p\">\n          {date}\n        </Typography>\n        <Typography variant=\"caption\" component=\"p\">\n          {weatherInfo}\n        </Typography>\n      </>\n      <Tooltip title=\"Add place to history\" aria-label=\"Add place to history\">\n        <Fab color=\"primary\" className={styles.addCity} onClick={handleAddCity}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  city: state.city,\n  country: state.country,\n  temperature: state.temperature,\n  weatherInfo: state.weatherInfo,\n  coordinates: state.coordinates,\n});\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrentWeather);\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-useless-computed-key */\r\nimport React from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Fab,\r\n  Tooltip,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { removeCityToHistory, clearHistory, refreshCoordinates } from '../redux/actions';\r\nimport { HistoryItem, Coordinates } from '../types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 40px',\r\n  },\r\n  history: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '200px 200px 200px 200px',\r\n    gridGap: '20px 20px',\r\n    ['@media (max-width: 900px)']: {\r\n      gridTemplateColumns: '200px 200px',\r\n    },\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  city: {\r\n    position: 'relative',\r\n    height: 100,\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor: theme.palette.primary.light,\r\n    opacity: 0.8,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  showHistory: {\r\n    height: '100%',\r\n  },\r\n  deleteBtn: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 5,\r\n    right: 5,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n      boxShadow: theme.shadows[2],\r\n    },\r\n  },\r\n  deleteAllBtn: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 10,\r\n    right: 10,\r\n  },\r\n}));\r\n\r\ninterface StateProps {\r\n  history: Array<HistoryItem>;\r\n}\r\n\r\ninterface DispatchProps {\r\n  deleteCityFromHistory: (id: string) => void;\r\n  setEmptyHistory: () => void;\r\n  setCoordinates: (data: Coordinates) => void;\r\n}\r\n\r\ntype SavedCitiesProps = StateProps & DispatchProps;\r\n\r\nconst SavedCities: React.FC<SavedCitiesProps> = (props) => {\r\n  const { history, deleteCityFromHistory, setEmptyHistory, setCoordinates } = props;\r\n  const styles = useStyles();\r\n\r\n  const showList = history.length < 8 ? history.slice() : history.slice(0, 7);\r\n  showList.reverse();\r\n\r\n  const handleRequest = (id: string, coordinates: Coordinates) => {\r\n    console.log(id);\r\n    console.log(coordinates);\r\n\r\n    setCoordinates(coordinates);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h2\" component=\"h2\">\r\n        Сохраненные города\r\n      </Typography>\r\n      <Tooltip title=\"Clear history\" aria-label=\"Clear history\">\r\n        <Fab color=\"primary\" className={styles.deleteAllBtn} onClick={setEmptyHistory}>\r\n          <DeleteIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      {showList.length === 0 ? (\r\n        <Alert severity=\"info\" variant=\"outlined\">\r\n          Ваша история пуста. Возможно, самое время пополнить коллекцию?\r\n        </Alert>\r\n      ) : (\r\n        <div className={styles.history}>\r\n          {showList.map((cityData: HistoryItem) => {\r\n            const { id, city, color, coordinates } = cityData;\r\n            return (\r\n              <Card\r\n                key={id}\r\n                className={styles.city}\r\n                style={{ backgroundColor: color }}\r\n                onClick={() => handleRequest(id, coordinates)}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    {city}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Tooltip title={`Delete ${city}`} aria-label=\"Clear history\">\r\n                    <Fab\r\n                      size=\"small\"\r\n                      className={styles.deleteBtn}\r\n                      onClick={() => deleteCityFromHistory(id.toString())}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </Fab>\r\n                  </Tooltip>\r\n                </CardActions>\r\n              </Card>\r\n            );\r\n          })}\r\n          <Button variant=\"contained\" className={styles.showHistory}>\r\n            Показать всю историю\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  history: state.history,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteCityFromHistory: (id: any) => removeCityToHistory(id),\r\n  setEmptyHistory: () => clearHistory(),\r\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\r\n};\r\n\r\nexport default connect<StateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(SavedCities);\r\n","import React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Paper, Typography } from '@material-ui/core';\n\nimport { HistoryItem, WeatherWeekProp } from '../types';\nimport { addCityToHistory } from '../redux/actions';\nimport { numberFit, temperatureZeroFit } from '../utils/temperature-fit';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    padding: '10px 40px 40px',\n  },\n  weekDays: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  day: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    height: 200,\n    padding: 20,\n  },\n  temperature: {\n    textAlign: 'right',\n  },\n}));\n\ninterface MapStateProps {\n  weatherWeek: WeatherWeekProp;\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\ntype MapProps = MapStateProps & DispatchProps;\n\nconst Week = (props: MapProps) => {\n  const { weatherWeek } = props;\n  const styles = useStyles();\n\n  const today = new Date();\n  const firstDay = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\n  const option = {\n    day: 'numeric',\n    month: 'long',\n  };\n\n  const week = [];\n  if (weatherWeek) {\n    for (let i = 1; i < 8; i += 1) {\n      const day = new Date(today.getTime() + i * 24 * 60 * 60 * 1000);\n      const { temperatureMin, temperatureMax } = weatherWeek.data[i];\n      const temperature = Math.floor((temperatureMin + temperatureMax) / 2);\n\n      week.push({\n        weekDay: day.toLocaleDateString('ru-RU', { weekday: 'long' }),\n        date: day.toLocaleDateString('ru-RU', { day: 'numeric', month: 'long' }),\n        temperature,\n      });\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Typography variant=\"h2\" component=\"h2\">\n        НЕДЕЛЯ\n      </Typography>\n      <Typography variant=\"body1\" component=\"p\">\n        {`${firstDay.toLocaleDateString('ru-RU', option)} - ${nextWeek.toLocaleDateString(\n          'ru-RU',\n          option\n        )}`}\n      </Typography>\n      <div className={styles.weekDays}>\n        {weatherWeek\n          ? week.map((item): any => {\n              const { weekDay, date, temperature } = item;\n              const temperatureFitted = temperatureZeroFit(numberFit(temperature));\n              return (\n                <Paper elevation={3} className={styles.day} key={weekDay}>\n                  <Typography variant=\"h3\" component=\"h3\">\n                    {date}\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    {weekDay}\n                  </Typography>\n                  <Typography variant=\"h1\" component=\"p\" className={styles.temperature}>\n                    {`${temperatureFitted} °C`}\n                  </Typography>\n                </Paper>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  weatherWeek: state.weatherWeek,\n});\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Week);\n","import React, { useState } from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { Marker, Popup } from 'react-map-gl';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport { HistoryItem, Coordinates } from '../types';\r\nimport { addCityToHistory } from '../redux/actions';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  marker: {\r\n    transform: 'translate(0, 0)',\r\n  },\r\n  user: {\r\n    position: 'relative',\r\n    cursor: 'pointer',\r\n    outline: 'none',\r\n    '& svg': {\r\n      fill: theme.palette.error.dark,\r\n    },\r\n  },\r\n  popup: {\r\n    maxWidth: '70%',\r\n    transform: 'none',\r\n\r\n    '& h2': {\r\n      margin: '0 0 10px 0',\r\n    },\r\n    '& p': {\r\n      margin: 0,\r\n    },\r\n    '& .mapboxgl-popup-content': {\r\n      minWidth: 50,\r\n      boxShadow: '2px 2px 10px rgba(0, 0, 0, .53)',\r\n    },\r\n  },\r\n}));\r\n\r\ninterface MapStateProps {\r\n  temperatureCurrent: number | null;\r\n  coordinates: Coordinates;\r\n  city: string;\r\n  country: string;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setNewCityToHistory: (history: HistoryItem) => void;\r\n}\r\n\r\ntype Props = MapStateProps & DispatchProps;\r\n\r\nconst MapMarker = (props: Props) => {\r\n  const { coordinates, temperatureCurrent, city, country } = props;\r\n  const { latitude, longitude } = coordinates;\r\n\r\n  const [isShowPopup, setIsShowPopup] = useState(false);\r\n\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={styles.user}\r\n        onClick={() => setIsShowPopup(!isShowPopup)}\r\n        onKeyDown={() => setIsShowPopup(!isShowPopup)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <Marker longitude={longitude} latitude={latitude} offsetLeft={-13} offsetTop={5}>\r\n          <RoomIcon />\r\n        </Marker>\r\n      </div>\r\n      {isShowPopup && (\r\n        <Popup\r\n          offsetLeft={0}\r\n          offsetTop={27}\r\n          latitude={latitude}\r\n          longitude={longitude}\r\n          onClose={() => setIsShowPopup(false)}\r\n          closeOnClick={false}\r\n          closeButton\r\n          anchor=\"left\"\r\n          className={styles.popup}\r\n        >\r\n          <div>\r\n            <Typography variant=\"h3\" component=\"p\">{`${temperatureCurrent} °C`}</Typography>\r\n            <Typography variant=\"body2\">{`${city}, ${country}`}</Typography>\r\n          </div>\r\n        </Popup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  coordinates: state.coordinates,\r\n  temperatureCurrent: state.temperature,\r\n  city: state.city,\r\n  country: state.country,\r\n});\r\n\r\ninterface DispatchProps {\r\n  setNewCityToHistory: (history: HistoryItem) => void;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\r\n};\r\n\r\nexport default connect<MapStateProps, DispatchProps>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MapMarker);\r\n","import React, { useState, useEffect } from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport MapGL, { FlyToInterpolator, GeolocateControl, ScaleControl } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { easeCubic } from 'd3-ease';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MapMarker from './map-marker';\n\nimport { MAPBOX_TOKEN } from '../constantas/api-keys';\nimport { addCityToHistory } from '../redux/actions';\nimport { HistoryItem, Coordinates } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  mapContainer: {\n    position: 'relative',\n    marginTop: 'auto',\n    width: 'calc(100% - 420px)',\n    textAlign: 'right',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  mapControllers: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 2,\n    boxShadow: theme.shadows[2],\n  },\n  btnGroupAndTheme: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexWrap: 'wrap',\n    backgroundColor: theme.palette.background.default,\n  },\n  fullscreenControl: {\n    position: 'absolute',\n    bottom: 40,\n    right: 10,\n  },\n  scaler: {\n    position: 'absolute',\n    bottom: 16,\n    right: 10,\n  },\n  modalWrap: {\n    width: '100vw',\n    backgroundColor: 'blue',\n  },\n  geolocateStyle: {\n    position: 'absolute',\n    bottom: 40,\n    right: 10,\n  },\n}));\n\ninterface MapStateProps {\n  coordinates: Coordinates;\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\ntype Props = MapStateProps & DispatchProps;\n\nconst Map = (props: Props) => {\n  const { coordinates } = props;\n  const { latitude, longitude } = coordinates;\n  const styles = useStyles();\n  const [viewport, setViewport] = useState({\n    width: 650,\n    height: 400,\n    latitude,\n    longitude,\n    zoom: 7,\n    bearing: 0,\n    pitch: 0,\n  });\n  const mapTheme = 'streets-v11';\n\n  useEffect(() => {\n    const gotoCurrentPlace = () => {\n      const viewportCurrent = {\n        ...viewport,\n        longitude,\n        latitude,\n        zoom: 10,\n        transitionDuration: 'auto',\n        transitionInterpolator: new FlyToInterpolator(),\n        transitionEasing: easeCubic,\n      };\n      setViewport(viewportCurrent);\n    };\n\n    gotoCurrentPlace();\n  }, [coordinates, latitude, longitude]);\n\n  return (\n    <>\n      <div id=\"map-container\" className={styles.mapContainer}>\n        <MapGL\n          {...viewport}\n          onViewportChange={setViewport}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          mapStyle={`mapbox://styles/mapbox/${mapTheme}`}\n          attributionControl\n          width=\"100%\"\n        >\n          <MapMarker />\n          <div className={styles.scaler}>\n            <ScaleControl maxWidth={100} unit=\"metric\" />\n          </div>\n          <GeolocateControl\n            className={styles.geolocateStyle}\n            positionOptions={{ enableHighAccuracy: true }}\n            trackUserLocation\n          />\n        </MapGL>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  coordinates: state.coordinates,\n});\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Map);\n","/* eslint-disable no-useless-computed-key */\nimport React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableContainer,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core';\n\nimport Map from './map';\n\nimport { NAVBAR_BTNS } from '../constantas/common';\nimport { numberFit, temperatureZeroFit } from '../utils/temperature-fit';\nimport { Weather48HoursProp, HistoryItem } from '../types';\nimport { addCityToHistory } from '../redux/actions';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'flex-end',\n    minHeight: 550,\n    padding: 40,\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n    },\n    ['@media (max-width: 520px)']: {\n      padding: '20px 20px 40px',\n    },\n    [theme.breakpoints.down('sm')]: {\n      padding: '10px 10px 40px',\n    },\n  },\n  info: {\n    width: 400,\n    marginRight: 20,\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: 40,\n      marginRight: 0,\n    },\n  },\n  table: {\n    minWidth: 250,\n    '& td, & td:last-child, & td:first-child': {\n      padding: '5px 7px',\n    },\n    '& td, & th': {\n      fontSize: '1rem',\n    },\n  },\n  headRow: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  tableHeader: {\n    color: theme.palette.text.secondary,\n  },\n}));\n\ninterface MapStateProps {\n  weather48Hours: Weather48HoursProp;\n}\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = MapStateProps & OwnProps;\n\nconst DayWeather = (props: Props) => {\n  const { title, weather48Hours } = props;\n  const styles = useStyles();\n  const today = new Date();\n  const day = title === NAVBAR_BTNS[1] ? today : new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const level = day.getDate();\n  const date = day.toLocaleDateString('ru-RU', {\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long',\n  });\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.info}>\n        <Typography variant=\"h2\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {date}\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table className={styles.table} size=\"small\" aria-label={`${title} weather`}>\n            <TableHead>\n              <TableRow className={styles.headRow}>\n                <TableCell className={styles.tableHeader}>Время</TableCell>\n                <TableCell className={styles.tableHeader}>Температура</TableCell>\n                <TableCell className={styles.tableHeader}>Описание</TableCell>\n                <TableCell className={styles.tableHeader}>Ветер</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {weather48Hours\n                ? weather48Hours.data.map((item: any) => {\n                    const { time, temperature, summary, windSpeed } = item;\n                    const timeConverted = new Date(time * 1000);\n                    const hoursView = (hour: number) => (hour < 10 ? `0${hour}` : hour);\n                    const isRender =\n                      level === timeConverted.getDate() && timeConverted.getHours() % 3 === 0;\n                    const temperatureFitted = temperatureZeroFit(numberFit(temperature));\n                    const windFitted = numberFit(windSpeed);\n                    return isRender ? (\n                      <TableRow key={item.time}>\n                        <TableCell>\n                          {`${hoursView(timeConverted.getHours())}: ${timeConverted.getMinutes()}0`}\n                        </TableCell>\n                        <TableCell>{`${temperatureFitted} °C`}</TableCell>\n                        <TableCell>{summary}</TableCell>\n                        <TableCell>{`${windFitted} м/с`}</TableCell>\n                      </TableRow>\n                    ) : null;\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <Map />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  weather48Hours: state.weather48Hours,\n});\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps, OwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(DayWeather);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    paddingTop: 40,\n    backgroundColor: 'rgba(0, 0, 0, .5)',\n    zIndex: 5,\n  },\n  msgWrap: {\n    flexGrow: 0,\n    minWidth: 200,\n    minHeight: 50,\n    padding: 20,\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.secondary,\n    border: `1px solid ${theme.palette.primary.dark}`,\n    borderRadius: 7,\n    opacity: 0.8,\n  },\n}));\n\ninterface PopupMessageProps {\n  msg: string;\n}\n\nconst PopupMessage: React.FC<PopupMessageProps> = ({ msg }) => {\n  const styles = useStyles();\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.msgWrap}>{msg}</div>\n      </div>\n    </>\n  );\n};\n\nexport default PopupMessage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  errorContainer: {\n    display: 'flex',\n    flexGrow: 0,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    maxWidth: 400,\n    padding: 40,\n    margin: '40px auto',\n    backgroundColor: theme.palette.background.default,\n    border: `1px solid ${theme.palette.primary.dark}`,\n    borderRadius: 10,\n    zIndex: 5,\n  },\n  titleWrap: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  title: {\n    margin: 0,\n    marginLeft: 30,\n    color: theme.palette.primary.dark,\n  },\n  info: {},\n}));\n\nconst ErrorIndicator = () => {\n  const styles = useStyles();\n  return (\n    <div className={styles.errorContainer}>\n      <div className={styles.titleWrap}>\n        <ErrorOutlineIcon color=\"primary\" fontSize=\"large\" />\n        <Typography variant=\"h1\" className={styles.title}>\n          BOOM!\n        </Typography>\n      </div>\n      <div className={styles.info}>\n        <Typography variant=\"body2\">\n          Something has gone terrribly wrong, but we already send droid to fix it.\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorIndicator;\n","/* eslint-disable react/state-in-constructor */\nimport React, { Component, ReactNode } from 'react';\n\nimport ErrorIndicator from './error-indicator';\n\ninterface Props {\n  children: ReactNode;\n}\ninterface ErrorState {\n  isWasError: boolean;\n}\n\nclass ErrorBoundry extends Component<Props> {\n  state: ErrorState = {\n    isWasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ isWasError: true });\n  }\n\n  render() {\n    const { isWasError } = this.state;\n    const { children } = this.props;\n    return isWasError ? <ErrorIndicator /> : children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { useState, useEffect } from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport theme from '../themes/theme';\nimport getCoordinates from '../services/get-coordinates';\nimport getWeatherByCoordinates from '../services/get-weather';\nimport { numberFit, temperatureZeroFit } from '../utils/temperature-fit';\nimport {\n  refreshCoordinates,\n  changeCity,\n  changeCountry,\n  changeWeatherInfo,\n  changeCurrentTemperature,\n  changeWeatherForNext48Hours,\n  changeWeatherWeek,\n} from '../redux/actions';\nimport { Coordinates, Weather48HoursProp, WeatherWeekProp } from '../types';\nimport { reverseGeocoding } from '../services/opencagedata';\n\n// components\nimport Navbar from './navbar';\nimport CurrentWeather from './current-weather';\nimport SavedCities from './saved-cities';\nimport Week from './week';\nimport DayWeather from './day-weather';\nimport PopupMessage from './popup-message';\nimport ErrorBoundry from './error-boundry';\n\n// contantas\nimport {\n  NAVBAR_BTNS,\n  FETCH_WEATHER_FAILED,\n  FETCH_GEOCODING_FAILED,\n  FETCH_COORDINATES_FAILED,\n} from '../constantas/common';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    position: 'relative',\n    maxWidth: 1200,\n    height: '95%',\n    margin: '20px auto',\n    boxShadow: theme.shadows[5],\n  },\n  sceleton: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  addBtn: {\n    position: 'absolute',\n    top: 70,\n    right: 10,\n  },\n}));\n\ninterface MapStateProps {\n  currentTab: string;\n  temperature: number;\n  coordinates: Coordinates;\n}\n\ninterface DispatchProps {\n  setCoordinates: (data: Coordinates) => void;\n  setCity: (str: string) => void;\n  setCountry: (str: string) => void;\n  setWeatherInfo: (str: string) => void;\n  setCurrentTemperature: (numb: number) => void;\n  setWeather48hours: (data: Weather48HoursProp) => void;\n  setWeatherWeek: (data: any) => void;\n}\n\ntype AppProps = MapStateProps & DispatchProps;\n\nconst App = (props: AppProps) => {\n  const {\n    temperature,\n    currentTab,\n    coordinates,\n    setCoordinates,\n    setCity,\n    setCountry,\n    setWeatherInfo,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherWeek,\n  } = props;\n\n  const styles = useStyles();\n  const [isShowPopup, setIsShowPopup] = useState<boolean>(false);\n  const [msg, setMsg] = useState<string>('Все в порядке!');\n\n  useEffect(() => {\n    let timerId: any;\n    getCoordinates()\n      .then((data) => {\n        const { latitude, longitude } = data;\n\n        setCoordinates({ latitude, longitude });\n      })\n      .catch((e) => {\n        console.log('getCoordinates error: ', e);\n        setMsg(FETCH_COORDINATES_FAILED);\n        timerId = setTimeout(() => {\n          setIsShowPopup(false);\n        }, 1000);\n      });\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [\n    setCoordinates,\n    setCity,\n    setCountry,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherInfo,\n    setWeatherWeek,\n  ]);\n\n  useEffect(() => {\n    const { latitude, longitude } = coordinates;\n    let timerId: any;\n    reverseGeocoding(latitude, longitude)\n      .then((data) => {\n        const { city, country } = data.results[0].components;\n        setCity(city);\n        setCountry(country);\n        if (city) {\n          window.history.pushState({ page: city }, city, `city=${city}`);\n        }\n      })\n      .catch((e) => {\n        console.log('reverseGeocoding error: ', e);\n        setIsShowPopup(true);\n        setMsg(FETCH_GEOCODING_FAILED);\n        timerId = setTimeout(() => {\n          setIsShowPopup(false);\n        }, 1000);\n      });\n    getWeatherByCoordinates(latitude, longitude, 'ru')\n      .then((weather) => {\n        setWeather48hours(weather.hourly);\n        setWeatherWeek(weather.daily);\n\n        const numberFitted = temperatureZeroFit(numberFit(weather.currently.temperature));\n        setCurrentTemperature(numberFitted);\n        const windFitted = numberFit(weather.currently.windSpeed);\n\n        const txt = `${weather.currently.summary}, Ветер - ${windFitted} м/с`;\n        setWeatherInfo(txt);\n      })\n      .catch((e) => {\n        console.log('getWeatherByCoordinates error: ', e);\n        setIsShowPopup(true);\n        setMsg(FETCH_WEATHER_FAILED);\n        timerId = setTimeout(() => {\n          setIsShowPopup(false);\n        }, 1000);\n      });\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [\n    coordinates,\n    setCity,\n    setCountry,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherInfo,\n    setWeatherWeek,\n  ]);\n  const componentMaps = new Map();\n  componentMaps.set(NAVBAR_BTNS[0], <SavedCities />);\n  componentMaps.set(NAVBAR_BTNS[1], <DayWeather title={NAVBAR_BTNS[1]} />);\n  componentMaps.set(NAVBAR_BTNS[2], <DayWeather title={NAVBAR_BTNS[2]} />);\n  componentMaps.set(NAVBAR_BTNS[3], <Week />);\n  return (\n    <ThemeProvider theme={theme}>\n      <ErrorBoundry>\n        <CssBaseline />\n        {isShowPopup ? <PopupMessage msg={msg} /> : null}\n        <div className={styles.container}>\n          <Navbar />\n          {temperature === null ? (\n            <div className={styles.sceleton}>\n              <Skeleton variant=\"circle\" width={50} height={50} className={styles.addBtn} />\n              <Skeleton variant=\"text\" width={50} height={70} />\n              <Skeleton variant=\"text\" width={300} height={50} />\n              <Skeleton variant=\"rect\" width={300} height={118} />\n            </div>\n          ) : (\n            <CurrentWeather />\n          )}\n          {componentMaps.get(currentTab)}\n        </div>\n      </ErrorBoundry>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  currentTab: state.currentTab,\n  temperature: state.temperature,\n  coordinates: state.coordinates,\n});\n\nconst mapDispatchToProps = {\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\n  setCity: (str: string) => changeCity(str),\n  setCountry: (str: string) => changeCountry(str),\n  setWeatherInfo: (str: string) => changeWeatherInfo(str),\n  setCurrentTemperature: (numb: number) => changeCurrentTemperature(numb),\n  setWeather48hours: (data: Weather48HoursProp) => changeWeatherForNext48Hours(data),\n  setWeatherWeek: (data: WeatherWeekProp) => changeWeatherWeek(data),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n  REFRESH_COORDINATES,\r\n  CHANGE_CURRENT_TAB,\r\n  CHANGE_CITY,\r\n  CHANGE_COUNTRY,\r\n  CHANGE_TODAY_WEATHER_INFO,\r\n  CHANGE_CURRENT_TEMPERATURE,\r\n  CHANGE_WEATHER_FOR_NEXT_48_HOURS,\r\n  CHANGE_WEEK_WEATHER,\r\n  ADD_CITY_TO_HISTORY,\r\n  DELETE_CITY_FROM_HISTORY,\r\n  CLEAR_HISTORY,\r\n} from './action-types';\r\nimport { NAVBAR_BTNS, CITIES_LIST } from '../constantas/common';\r\nimport { StoreType } from '../types';\r\nimport FAKE_HISTORY from '../services/fake-history';\r\n\r\nconst ls = localStorage.getItem(CITIES_LIST);\r\nconst history = ls === null ? FAKE_HISTORY : JSON.parse(ls);\r\n// HistoryItem  is shape of {\r\n//   color,\r\n//   id,\r\n//   city,\r\n//   coordinates,\r\n// }\r\n\r\nconst initialState: StoreType = {\r\n  currentTab: NAVBAR_BTNS[0],\r\n  coordinates: {\r\n    latitude: 0,\r\n    longitude: 0,\r\n  },\r\n  city: '',\r\n  country: '',\r\n  temperature: null,\r\n  weatherInfo: '',\r\n  weather48Hours: null,\r\n  weatherWeek: null,\r\n  history,\r\n};\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case REFRESH_COORDINATES:\r\n      return {\r\n        ...state,\r\n        coordinates: action.coordinates,\r\n      };\r\n    case CHANGE_CURRENT_TAB:\r\n      return {\r\n        ...state,\r\n        currentTab: action.currentTab,\r\n      };\r\n    case CHANGE_CITY:\r\n      return {\r\n        ...state,\r\n        city: action.city,\r\n      };\r\n    case CHANGE_COUNTRY:\r\n      return {\r\n        ...state,\r\n        country: action.country,\r\n      };\r\n    case CHANGE_TODAY_WEATHER_INFO:\r\n      return {\r\n        ...state,\r\n        weatherInfo: action.weatherInfo,\r\n      };\r\n    case CHANGE_CURRENT_TEMPERATURE:\r\n      return {\r\n        ...state,\r\n        temperature: action.temperature,\r\n      };\r\n    case CHANGE_WEATHER_FOR_NEXT_48_HOURS:\r\n      return {\r\n        ...state,\r\n        weather48Hours: action.weather48Hours,\r\n      };\r\n    case CHANGE_WEEK_WEATHER:\r\n      return {\r\n        ...state,\r\n        weatherWeek: action.weatherWeek,\r\n      };\r\n    case ADD_CITY_TO_HISTORY:\r\n      return {\r\n        ...state,\r\n        history: [...state.history, action.history],\r\n      };\r\n    case DELETE_CITY_FROM_HISTORY:\r\n      return {\r\n        ...state,\r\n        history: state.history.filter((item) => item.id !== action.id),\r\n      };\r\n    case CLEAR_HISTORY:\r\n      return {\r\n        ...state,\r\n        history: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export default [\r\n  {\r\n    id: 'aaa-AAA_999999:0',\r\n    city: 'Барнаул',\r\n    coordinates: {\r\n      latitude: 53.3606,\r\n      longitude: 83.7636,\r\n    },\r\n    color: '#FFAA22',\r\n  },\r\n  {\r\n    id: 'aaa-AAA_999999:1',\r\n    city: 'Москва',\r\n    coordinates: {\r\n      latitude: 55.7504461,\r\n      longitude: 37.6174943,\r\n    },\r\n    color: '#55AA22',\r\n  },\r\n  {\r\n    id: 'aaa-AAA_999999:2',\r\n    city: 'Красноярск',\r\n    coordinates: {\r\n      latitude: 56.0090968,\r\n      longitude: 92.8725147,\r\n    },\r\n    color: '#BBAA22',\r\n  },\r\n];\r\n","import store from './store';\r\nimport { ADD_CITY_TO_HISTORY, CLEAR_HISTORY, DELETE_CITY_FROM_HISTORY } from './action-types';\r\nimport { CITIES_LIST } from '../constantas/common';\r\n\r\nconst middleware = () => {\r\n  return (next: any) => {\r\n    return (action: any) => {\r\n      if (action.type === ADD_CITY_TO_HISTORY) {\r\n        const state = store.getState();\r\n        const newHistory = [...state.history, action.history];\r\n\r\n        localStorage.removeItem(CITIES_LIST);\r\n        localStorage.setItem(CITIES_LIST, JSON.stringify(newHistory));\r\n      }\r\n      if (action.type === CLEAR_HISTORY) {\r\n        localStorage.removeItem(CITIES_LIST);\r\n      }\r\n      if (action.type === DELETE_CITY_FROM_HISTORY) {\r\n        const state = store.getState();\r\n        const newHistory = state.history.filter((item) => item.id !== action.id);\r\n\r\n        localStorage.removeItem(CITIES_LIST);\r\n        localStorage.setItem(CITIES_LIST, JSON.stringify(newHistory));\r\n      }\r\n      return next(action);\r\n    };\r\n  };\r\n};\r\n\r\nexport default middleware;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer from './reducer';\r\nimport middleware from './middleware';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, storeEnhancers(applyMiddleware(middleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/app';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}