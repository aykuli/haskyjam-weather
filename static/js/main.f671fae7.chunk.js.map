{"version":3,"sources":["themes/theme.ts","constantas/api-keys.ts","services/get-coordinates.ts","services/get-weather.ts","redux/actions.ts","redux/action-types.ts","services/opencagedata.ts","constantas/common.ts","components/navbar.tsx","services/color-generator.ts","components/current-weather.tsx","components/saved-cities.tsx","components/week.tsx","components/map-marker.tsx","components/map.tsx","components/day-weather.tsx","components/app.tsx","redux/reducer.ts","services/fake-history.ts","redux/middleware.ts","redux/store.ts","index.tsx"],"names":["theme","createMuiTheme","palette","type","primary","main","contrastText","secondary","text","background","default","typography","fontFamily","fontSize","h1","lineHeight","fontWeight","color","margin","h2","h3","padding","h6","body1","body2","button","caption","spacing","factor","overrides","MuiCssBaseline","fontStyle","MuiInput","underline","borderBottom","responsiveFontSizes","OPENCAGEDATA_KEY","getCoordinates","a","fetch","response","json","data","city","country","loc","split","lat","lng","latitude","Number","longitude","getWeatherByCoordinates","lang","url","refreshCoordinates","coordinates","changeCity","changeCountry","addCityToHistory","history","settlement","headers","NAVBAR_BTNS","useStyles","makeStyles","createStyles","root","display","justifyContent","alignItems","flexWrap","backgroundColor","activeTab","dark","btnGroup","marginBottom","search","position","borderRadius","shape","fade","common","white","marginLeft","width","breakpoints","up","searchIcon","height","top","left","pointerEvents","inputRoot","minWidth","mapDispatchToProps","changeCurrentTab","newTab","currentTab","setCoordinates","setCity","str","setCountry","connect","state","props","styles","handleTab","e","innerText","target","className","ButtonGroup","size","aria-label","map","btn","Button","key","onClick","token","query","autoload","placeholder","onChange","console","log","forwardGeocoding","then","results","geometry","getRandomColor","i","Math","floor","random","flexDirection","boxShadow","shadows","addCity","zIndex","right","setNewCityToHistory","temperature","weatherInfo","fakerator","Fakerator","date","Date","Intl","DateTimeFormat","year","month","day","format","getDate","Typography","variant","component","Tooltip","title","Fab","id","masked","container","gridTemplateColumns","gridGap","cursor","light","opacity","showHistory","deleteBtn","deleteAllBtn","deleteCityFromHistory","removeCityToHistory","setEmptyHistory","showList","length","slice","reverse","Alert","severity","cityData","Card","style","handleRequest","CardContent","CardActions","toString","weekDays","textAlign","weatherWeek","today","firstDay","getTime","nextWeek","option","week","temperatureMin","temperatureMax","push","weekDay","toLocaleDateString","weekday","item","Paper","elevation","marker","transform","user","outline","fill","error","popup","maxWidth","temperatureCurrent","useState","isShowPopup","setIsShowPopup","onKeyDown","role","tabIndex","offsetLeft","offsetTop","onClose","closeOnClick","closeButton","anchor","mapContainer","marginTop","down","mapControllers","btnGroupAndTheme","fullscreenControl","bottom","scaler","modalWrap","geolocateStyle","zoom","bearing","pitch","viewport","setViewport","useEffect","viewportCurrent","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","gotoCurrentPlace","onViewportChange","mapboxApiAccessToken","mapStyle","attributionControl","unit","positionOptions","enableHighAccuracy","trackUserLocation","minHeight","info","marginRight","table","headRow","tableHeader","weather48Hours","level","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","hour","time","summary","windSpeed","timeConverted","getHours","getMinutes","sceleton","addBtn","setWeatherInfo","setCurrentTemperature","numb","setWeather48hours","setWeatherWeek","reverseGeocoding","components","window","pushState","page","weather","hourly","daily","currently","txt","catch","componentMaps","Map","set","ThemeProvider","CssBaseline","Skeleton","get","ls","localStorage","getItem","JSON","parse","initialState","reducer","action","filter","middleware","next","store","getState","newHistory","removeItem","setItem","stringify","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f671fae7.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport '@openfonts/ubuntu-condensed_cyrillic';\n\nconst ubuntuCondensed = {\n  fontFamily: 'Ubuntu Condensed',\n  fontStyle: 'normal',\n  fontWeight: '400',\n};\n// palette created with material palette generator https://material.io/inline-tools/color/\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#4ed6b8',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#ffffff', // Complementary color to primary\n      contrastText: '#3d4451',\n    },\n    text: {\n      primary: '#3d4451',\n      secondary: '#ffffff',\n    },\n    background: {\n      default: '#ffffff',\n    },\n  },\n  typography: {\n    fontFamily: 'Ubuntu Condensed',\n    fontSize: 16,\n    h1: {\n      fontSize: '3.5rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 30px',\n    },\n    h2: {\n      fontSize: '2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '20px 0 20px',\n    },\n    h3: {\n      fontSize: '1.6rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      padding: '5px 0 5px',\n    },\n    h6: {\n      fontSize: '1.2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 10px',\n    },\n    body1: {\n      fontSize: '1.6rem',\n      lineHeight: '1.6',\n      color: '#ffffff',\n    },\n    body2: {\n      fontSize: '1.6rem',\n      lineHeight: '1.4',\n      color: '#3d4451',\n      padding: '5px 0 5px',\n    },\n    button: {\n      fontSize: '1rem',\n      lineHeight: '1.4',\n      color: '#403d51',\n    },\n    caption: {\n      fontSize: '1.2rem',\n      lineHeight: '1',\n      color: '#000000',\n    },\n  },\n  spacing: (factor) => `${0.25 * factor}rem`, // (Bootstrap strategy)\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@font-face': [ubuntuCondensed],\n      },\n    },\n    MuiInput: {\n      underline: {\n        '&&&&:hover:before': {\n          borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\n        },\n      },\n    },\n  },\n});\n\nexport default responsiveFontSizes(theme);\n","export const IP_INFO_KEY = 'abb04b3b63728f';\nexport const OPEN_WEATHER_KEY = '612f3911b66f3c4db9ea235ee7c23612';\nexport const DARKSKY_KEY = 'eefc04453f3143682c3c88d3669c3546';\nexport const MAPBOX_TOKEN =\n  'pk.eyJ1IjoiYXlrdWxpIiwiYSI6ImNrM2pybXF5MjA0OWczcG14ZzdxNXBlYmMifQ.tYv6CcePP02kbiXAJ-p_Mw';\nexport const DADATA = '41abac0b9197748c810ee5b27d23d04998ecc55b';\nexport const OPENCAGEDATA_KEY = '08e88a2c40fb4a34966ad1a41752ff28';\n\n// TODO переснести в env=production\n","import { IP_INFO_KEY } from '../constantas/api-keys';\n\nconst getCoordinates = async () => {\n  const response = await fetch(`https://ipinfo.io?token=${IP_INFO_KEY}`);\n  const data = await response.json();\n  const { city, country } = data;\n  const [lat, lng] = data.loc.split(',');\n  return {\n    latitude: Number(lat),\n    longitude: Number(lng),\n    city,\n    country,\n  };\n};\n\nexport default getCoordinates;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { OPEN_WEATHER_KEY, DARKSKY_KEY } from '../constantas/api-keys';\n\ninterface RequestCors {\n  type: string;\n}\n\nconst getWeatherByCoordinates = async (latitude: number, longitude: number, lang: string) => {\n  // try to fetcj to opencagedata. Work bad\n  // const units = 'metric';\n  // const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=${OPEN_WEATHER_KEY}&lang=${lang}&units=${units}`;\n  // const response = await fetch(url);\n\n  const unit = 'si';\n  const url = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${DARKSKY_KEY}/${latitude},${longitude}?lang=${lang}&units=${unit}`;\n\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport default getWeatherByCoordinates;\n","import {\n  REFRESH_COORDINATES,\n  CHANGE_CURRENT_TAB,\n  CHANGE_CITY,\n  CHANGE_COUNTRY,\n  CHANGE_TODAY_WEATHER_INFO,\n  CHANGE_CURRENT_TEMPERATURE,\n  CHANGE_WEATHER_FOR_NEXT_48_HOURS,\n  CHANGE_WEEK_WEATHER,\n  ADD_CITY_TO_HISTORY,\n  DELETE_CITY_FROM_HISTORY,\n  CLEAR_HISTORY,\n} from './action-types';\nimport { HistoryItem, Weather48HoursProp, WeatherWeekProp, Coordinates } from '../types';\n\ninterface CoordinatesProps {\n  type: string;\n  coordinates: Coordinates;\n}\n\ninterface CurrentTabProps {\n  type: string;\n  currentTab: string;\n}\n\ninterface CityProps {\n  type: string;\n  city: string;\n}\n\ninterface CountryProps {\n  type: string;\n  country: string;\n}\n\ninterface WeatherInfoProps {\n  type: string;\n  weatherInfo: string;\n}\n\ninterface TemperatureProps {\n  type: string;\n  temperature: number;\n}\n\ninterface Weather48Props {\n  type: string;\n  weather48Hours: Weather48HoursProp | null;\n}\n\ninterface WeekWeatherProps {\n  type: string;\n  weatherWeek: any | null;\n}\n\ninterface RemoveCityProps {\n  type: string;\n  id: string;\n}\n\ninterface HistoryProps {\n  type: string;\n  history: HistoryItem;\n}\n\ninterface EmptyHistoryProps {\n  type: string;\n  history: Array<HistoryItem>;\n}\n\nexport const refreshCoordinates = ({ latitude, longitude }: Coordinates): CoordinatesProps => {\n  return {\n    type: REFRESH_COORDINATES,\n    coordinates: { latitude, longitude },\n  };\n};\n\nexport const changeCurrentTab = (currentTab: string): CurrentTabProps => {\n  return {\n    type: CHANGE_CURRENT_TAB,\n    currentTab,\n  };\n};\n\nexport const changeCity = (city: string): CityProps => {\n  return {\n    type: CHANGE_CITY,\n    city,\n  };\n};\n\nexport const changeCountry = (country: string): CountryProps => {\n  return {\n    type: CHANGE_COUNTRY,\n    country,\n  };\n};\n\nexport const changeWeatherInfo = (weatherInfo: string): WeatherInfoProps => {\n  return {\n    type: CHANGE_TODAY_WEATHER_INFO,\n    weatherInfo,\n  };\n};\n\nexport const changeCurrentTemperature = (temperature: number): TemperatureProps => {\n  return {\n    type: CHANGE_CURRENT_TEMPERATURE,\n    temperature,\n  };\n};\n\nexport const changeWeatherForNext48Hours = (weather48Hours: Weather48HoursProp): Weather48Props => {\n  return {\n    type: CHANGE_WEATHER_FOR_NEXT_48_HOURS,\n    weather48Hours,\n  };\n};\n\nexport const changeWeatherWeek = (weatherWeek: WeatherWeekProp): WeekWeatherProps => {\n  return {\n    type: CHANGE_WEEK_WEATHER,\n    weatherWeek,\n  };\n};\n\nexport const addCityToHistory = (history: HistoryItem): HistoryProps => {\n  return {\n    type: ADD_CITY_TO_HISTORY,\n    history,\n  };\n};\n\nexport const removeCityToHistory = (id: string): RemoveCityProps => {\n  console.log('id: ', id);\n  return {\n    type: DELETE_CITY_FROM_HISTORY,\n    id,\n  };\n};\n\nexport const clearHistory = (): EmptyHistoryProps => {\n  return {\n    type: CLEAR_HISTORY,\n    history: [],\n  };\n};\n","export const REFRESH_COORDINATES = 'REFRESH_COORDINATES';\nexport const CHANGE_CURRENT_TAB = 'CHANGE_CURRENT_TAB';\nexport const CHANGE_CITY = 'CHANGE_CITY';\nexport const CHANGE_COUNTRY = 'CHANGE_COUNTRY';\nexport const CHANGE_TODAY_WEATHER_INFO = 'CHANGE_TODAY_WEATHER_INFO';\nexport const CHANGE_CURRENT_TEMPERATURE = 'CHANGE_CURRENT_TEMPERATURE';\nexport const CHANGE_WEATHER_FOR_NEXT_48_HOURS = 'CHANGE_WEATHER_FOR_NEXT_48_HOURS';\nexport const CHANGE_WEEK_WEATHER = 'CHANGE_WEEK_WEATHER';\nexport const ADD_CITY_TO_HISTORY = 'ADD_CITY_TO_HISTORY';\nexport const DELETE_CITY_FROM_HISTORY = 'DELETE_CITY_FROM_HISTORY';\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\n","import { OPENCAGEDATA_KEY } from '../constantas/api-keys';\n\nasync function forwardGeocoding(settlement: string, lang = 'ru') {\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${settlement}&countrycode=${lang}&key=${OPENCAGEDATA_KEY}&language=${lang}&pretty=1&no_annotations=1`;\n  const headers: any = { 'Content-Type': 'application/json' };\n\n  const response = await fetch(url, headers);\n  return response.json();\n}\n\nasync function reverseGeocoding(latitude: number, longitude: number, lang = 'ru') {\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitude}%2C${longitude}&key=${OPENCAGEDATA_KEY}&language=${lang}&pretty=1`;\n  const response = await fetch(url);\n  return response.json();\n}\n\nexport { forwardGeocoding, reverseGeocoding };\n","export const NAVBAR_BTNS = ['ИСТОРИЯ', 'СЕГОДНЯ', 'ЗАВТРА', 'НЕДЕЛЯ'];\nexport const CITIES_LIST = 'CITIES_LIST';\nexport const SEARCH_PLACEHOLDER = 'Введите адрес для поиска';\n","/* eslint-disable no-useless-computed-key */\nimport React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { ReactDadata } from 'react-dadata';\nimport { ButtonGroup, Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles, fade, Theme, createStyles } from '@material-ui/core/styles';\n\nimport { NAVBAR_BTNS, SEARCH_PLACEHOLDER } from '../constantas/common';\nimport { DADATA } from '../constantas/api-keys';\n\nimport { Coordinates, DadataSuggestion } from '../types';\n\nimport {\n  changeCurrentTab as changeTab,\n  refreshCoordinates,\n  changeCity,\n  changeCountry,\n} from '../redux/actions';\nimport { forwardGeocoding } from '../services/opencagedata';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'flex-end',\n      flexWrap: 'wrap',\n      backgroundColor: theme.palette.primary.main,\n      padding: '10px 40px',\n    },\n    activeTab: {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    btnGroup: {\n      ['@media (max-width: 624px)']: {\n        marginBottom: 20,\n        margin: 'auto',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n      ['@media (max-width: 624px)']: {\n        marginBottom: 10,\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      top: 0,\n      left: -40,\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      minWidth: 250,\n      width: '100%',\n      color: theme.palette.text.primary,\n    },\n  })\n);\n\ninterface MapStateProps {\n  currentTab: string;\n}\n\ninterface DispatchProps {\n  setCoordinates: (data: Coordinates) => void;\n  setCity: (str: string) => void;\n  setCountry: (str: string) => void;\n  changeCurrentTab: (newTab: string) => void;\n}\n\ntype AppProps = MapStateProps & DispatchProps;\n\nconst Navbar = (props: AppProps) => {\n  const { changeCurrentTab, currentTab, setCoordinates } = props;\n\n  const styles = useStyles();\n\n  const handleTab = (\n    e: React.MouseEvent<HTMLButtonElement> | React.KeyboardEvent<HTMLButtonElement>\n  ) => {\n    const { innerText } = e.target as HTMLButtonElement;\n    changeCurrentTab(innerText);\n  };\n\n  const handleSearch = (e: DadataSuggestion) => {\n    console.log('1: ', e);\n    const settlement = e.data.city;\n    forwardGeocoding(settlement).then((data) => {\n      const coordinates = data.results[0].geometry;\n      setCoordinates({ latitude: coordinates.lat, longitude: coordinates.lng });\n    });\n  };\n\n  return (\n    <div className={styles.root}>\n      <ButtonGroup\n        size=\"large\"\n        color=\"secondary\"\n        aria-label=\"wheather for today, tomorrow or for week\"\n        className={styles.btnGroup}\n      >\n        {NAVBAR_BTNS.map((btn) => {\n          return (\n            <Button\n              key={btn}\n              onClick={handleTab}\n              className={btn === currentTab ? styles.activeTab : ''}\n            >\n              {btn}\n            </Button>\n          );\n        })}\n      </ButtonGroup>\n      <div className={styles.search}>\n        <div className={styles.searchIcon}>\n          <SearchIcon color=\"secondary\" />\n        </div>\n        <div className={styles.inputRoot}>\n          <ReactDadata\n            token={DADATA}\n            query=\"\"\n            autoload\n            placeholder={SEARCH_PLACEHOLDER}\n            onChange={handleSearch}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  currentTab: state.currentTab,\n});\n\nconst mapDispatchToProps = {\n  changeCurrentTab: (newTab: string) => changeTab(newTab),\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\n  setCity: (str: string) => changeCity(str),\n  setCountry: (str: string) => changeCountry(str),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Navbar);\n","const getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i += 1) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport default getRandomColor;\n","import React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography, Fab, Tooltip } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fakerator from 'fakerator';\n\nimport getRandomColor from '../services/color-generator';\nimport { addCityToHistory } from '../redux/actions';\nimport { Coordinates, HistoryItem } from '../types';\n\n// TODO icons\nconst useStyles = makeStyles((theme: Theme) => ({\n  main: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    boxShadow: theme.shadows[1],\n  },\n  addCity: {\n    position: 'absolute',\n    zIndex: 1,\n    top: 10,\n    right: 10,\n  },\n}));\n\nconst getDate = (lang: string) => {\n  const date = new Date();\n  const formatter = new Intl.DateTimeFormat(lang, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\n  return formatter.format(date);\n};\n\ninterface MapStateProps {\n  city: string;\n  country: string;\n  temperature: number;\n  weatherInfo: string;\n  coordinates: Coordinates;\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (item: HistoryItem) => void;\n}\n\ntype Props = MapStateProps & DispatchProps;\n\nconst CurrentWeather = (props: Props) => {\n  const { temperature, city, country, weatherInfo, coordinates, setNewCityToHistory } = props;\n\n  const fakerator = Fakerator('en-EN');\n\n  const handleAddCity = () => {\n    const id = fakerator.random.masked('aaa-AAA_999999:*');\n    const color = getRandomColor();\n    setNewCityToHistory({\n      id,\n      city,\n      coordinates,\n      color,\n    });\n  };\n\n  const styles = useStyles();\n  const date = getDate('ru'); // TODO we can make language changing\n\n  return (\n    <div className={styles.main}>\n      <Typography variant=\"h1\" component=\"p\">{`${temperature} °C`}</Typography>\n      <Typography variant=\"body2\" component=\"p\">{`${city}, ${country}`}</Typography>\n      <>\n        <Typography variant=\"body2\" component=\"p\">\n          {date}\n        </Typography>\n        <Typography variant=\"caption\" component=\"p\">\n          {weatherInfo}\n        </Typography>\n      </>\n      <Tooltip title=\"Add place to history\" aria-label=\"Add place to history\">\n        <Fab color=\"primary\" className={styles.addCity} onClick={handleAddCity}>\n          <AddIcon />\n        </Fab>\n      </Tooltip>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  city: state.city,\n  country: state.country,\n  temperature: state.temperature,\n  weatherInfo: state.weatherInfo,\n  coordinates: state.coordinates,\n});\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(CurrentWeather);\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-useless-computed-key */\nimport React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Button,\n  Fab,\n  Tooltip,\n  Card,\n  CardActions,\n  CardContent,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { removeCityToHistory, clearHistory, refreshCoordinates } from '../redux/actions';\nimport { HistoryItem, Coordinates } from '../types';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '10px 10px 40px',\n  },\n  history: {\n    display: 'grid',\n    gridTemplateColumns: '200px 200px 200px 200px',\n    gridGap: '20px 20px',\n    ['@media (max-width: 900px)']: {\n      gridTemplateColumns: '200px 200px',\n    },\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  city: {\n    position: 'relative',\n    height: 100,\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.primary.light,\n    opacity: 0.8,\n    '&:hover': {\n      opacity: 1,\n    },\n  },\n  showHistory: {\n    height: '100%',\n  },\n  deleteBtn: {\n    position: 'absolute',\n    zIndex: 1,\n    top: 5,\n    right: 5,\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n    '&:hover': {\n      backgroundColor: 'transparent',\n      boxShadow: theme.shadows[2],\n    },\n  },\n  deleteAllBtn: {\n    position: 'absolute',\n    zIndex: 1,\n    top: 10,\n    right: 10,\n  },\n}));\n\ninterface StateProps {\n  history: Array<HistoryItem>;\n}\n\ninterface DispatchProps {\n  deleteCityFromHistory: (id: string) => void;\n  setEmptyHistory: () => void;\n  setCoordinates: (data: Coordinates) => void;\n}\n\ntype SavedCitiesProps = StateProps & DispatchProps;\n\nconst SavedCities: React.FC<SavedCitiesProps> = (props) => {\n  const { history, deleteCityFromHistory, setEmptyHistory, setCoordinates } = props;\n  const styles = useStyles();\n\n  const showList = history.length < 8 ? history.slice() : history.slice(0, 7);\n  showList.reverse();\n\n  const handleRequest = (id: string, coordinates: Coordinates) => {\n    console.log(id);\n    console.log(coordinates);\n\n    setCoordinates(coordinates);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Typography variant=\"h2\" component=\"h2\">\n        Сохраненные города\n      </Typography>\n      <Tooltip title=\"Clear history\" aria-label=\"Clear history\">\n        <Fab color=\"primary\" className={styles.deleteAllBtn} onClick={setEmptyHistory}>\n          <DeleteIcon />\n        </Fab>\n      </Tooltip>\n      {showList.length === 0 ? (\n        <Alert severity=\"info\" variant=\"outlined\">\n          Ваша история пуста. Возможно, самое время пополнить коллекцию?\n        </Alert>\n      ) : (\n        <div className={styles.history}>\n          {showList.map((cityData: HistoryItem) => {\n            const { id, city, color, coordinates } = cityData;\n            return (\n              <Card\n                key={id}\n                className={styles.city}\n                style={{ backgroundColor: color }}\n                onClick={() => handleRequest(id, coordinates)}\n              >\n                <CardContent>\n                  <Typography variant=\"body1\" component=\"p\">\n                    {city}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Tooltip title={`Delete ${city}`} aria-label=\"Clear history\">\n                    <Fab\n                      size=\"small\"\n                      className={styles.deleteBtn}\n                      onClick={() => deleteCityFromHistory(id.toString())}\n                    >\n                      <DeleteIcon />\n                    </Fab>\n                  </Tooltip>\n                </CardActions>\n              </Card>\n            );\n          })}\n          <Button variant=\"contained\" className={styles.showHistory}>\n            Показать всю историю\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  history: state.history,\n});\n\nconst mapDispatchToProps = {\n  deleteCityFromHistory: (id: any) => removeCityToHistory(id),\n  setEmptyHistory: () => clearHistory(),\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\n};\n\nexport default connect<StateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(SavedCities);\n","import React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Paper, Typography } from '@material-ui/core';\n\nimport { HistoryItem, WeatherWeekProp } from '../types';\nimport { addCityToHistory } from '../redux/actions';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    padding: '10px 40px 40px',\n  },\n  weekDays: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  day: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    height: 200,\n    padding: 20,\n  },\n  temperature: {\n    textAlign: 'right',\n  },\n}));\n\ninterface MapStateProps {\n  weatherWeek: WeatherWeekProp; // TODO check all any types\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\ntype MapProps = MapStateProps & DispatchProps;\n\n// TODO icons\n\nconst Week = (props: MapProps) => {\n  const { weatherWeek } = props;\n  const styles = useStyles();\n\n  const today = new Date();\n  const firstDay = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\n  const option = {\n    day: 'numeric',\n    month: 'long',\n  };\n\n  const week = [];\n  if (weatherWeek) {\n    for (let i = 1; i < 8; i += 1) {\n      const day = new Date(today.getTime() + i * 24 * 60 * 60 * 1000);\n      const { temperatureMin, temperatureMax } = weatherWeek.data[i];\n      const temperature = Math.floor((temperatureMin + temperatureMax) / 2);\n\n      week.push({\n        weekDay: day.toLocaleDateString('ru-RU', { weekday: 'long' }),\n        date: day.toLocaleDateString('ru-RU', { day: 'numeric', month: 'long' }),\n        temperature,\n      });\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Typography variant=\"h2\" component=\"h2\">\n        НЕДЕЛЯ\n      </Typography>\n      <Typography variant=\"body1\" component=\"p\">\n        {`${firstDay.toLocaleDateString('ru-RU', option)} - ${nextWeek.toLocaleDateString(\n          'ru-RU',\n          option\n        )}`}\n      </Typography>\n      <div className={styles.weekDays}>\n        {weatherWeek\n          ? week.map((item): any => {\n              const { weekDay, date, temperature } = item;\n              return (\n                <Paper elevation={3} className={styles.day} key={weekDay}>\n                  <Typography variant=\"h3\" component=\"h3\">\n                    {date}\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    {weekDay}\n                  </Typography>\n                  <Typography variant=\"h1\" component=\"p\" className={styles.temperature}>\n                    {`${temperature} °C`}\n                  </Typography>\n                </Paper>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  weatherWeek: state.weatherWeek,\n});\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Week);\n","import React, { useState } from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { Marker, Popup } from 'react-map-gl';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nimport { HistoryItem, Coordinates } from '../types';\nimport { addCityToHistory } from '../redux/actions';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  marker: {\n    transform: 'translate(0, 0)',\n  },\n  user: {\n    position: 'relative',\n    cursor: 'pointer',\n    outline: 'none',\n    '& svg': {\n      fill: theme.palette.error.dark,\n    },\n  },\n  popup: {\n    maxWidth: '70%',\n    transform: 'none',\n\n    '& h2': {\n      margin: '0 0 10px 0',\n    },\n    '& p': {\n      margin: 0,\n    },\n    '& .mapboxgl-popup-content': {\n      minWidth: 50,\n      boxShadow: '2px 2px 10px rgba(0, 0, 0, .53)',\n    },\n  },\n}));\n\ninterface MapStateProps {\n  temperatureCurrent: number | null;\n  coordinates: Coordinates;\n  city: string;\n  country: string;\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\ntype Props = MapStateProps & DispatchProps;\n\nconst MapMarker = (props: Props) => {\n  const { coordinates, temperatureCurrent, city, country } = props;\n  const { latitude, longitude } = coordinates;\n\n  const [isShowPopup, setIsShowPopup] = useState(false);\n\n  const styles = useStyles();\n\n  return (\n    <>\n      <div\n        className={styles.user}\n        onClick={() => setIsShowPopup(!isShowPopup)}\n        onKeyDown={() => setIsShowPopup(!isShowPopup)}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <Marker longitude={longitude} latitude={latitude} offsetLeft={-13} offsetTop={5}>\n          <RoomIcon />\n        </Marker>\n      </div>\n      {isShowPopup && (\n        <Popup\n          offsetLeft={0}\n          offsetTop={27}\n          latitude={latitude}\n          longitude={longitude}\n          onClose={() => setIsShowPopup(false)}\n          closeOnClick={false}\n          closeButton\n          anchor=\"left\"\n          className={styles.popup}\n        >\n          <div>\n            <Typography variant=\"h3\" component=\"p\">{`${temperatureCurrent} °C`}</Typography>\n            <Typography variant=\"body2\">{`${city}, ${country}`}</Typography>\n          </div>\n        </Popup>\n      )}\n    </>\n  );\n};\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  coordinates: state.coordinates,\n  temperatureCurrent: state.temperature,\n  city: state.city,\n  country: state.country,\n});\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(MapMarker);\n","import React, { useState, useEffect } from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport MapGL, { FlyToInterpolator, GeolocateControl, ScaleControl } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { easeCubic } from 'd3-ease';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MapMarker from './map-marker';\n\nimport { MAPBOX_TOKEN } from '../constantas/api-keys';\nimport { addCityToHistory } from '../redux/actions';\nimport { HistoryItem, Coordinates } from '../types';\n\nconst useStyles = makeStyles((theme) => ({\n  mapContainer: {\n    position: 'relative',\n    marginTop: 'auto',\n    width: 'calc(100% - 420px)',\n    textAlign: 'right',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  mapControllers: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    zIndex: 2,\n    boxShadow: theme.shadows[2],\n  },\n  btnGroupAndTheme: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    flexWrap: 'wrap',\n    backgroundColor: theme.palette.background.default,\n  },\n  fullscreenControl: {\n    position: 'absolute',\n    bottom: 40,\n    right: 10,\n  },\n  scaler: {\n    position: 'absolute',\n    bottom: 16,\n    right: 10,\n  },\n  modalWrap: {\n    width: '100vw',\n    backgroundColor: 'blue',\n  },\n  geolocateStyle: {\n    position: 'absolute',\n    bottom: 40,\n    right: 10,\n  },\n}));\n\ninterface MapStateProps {\n  coordinates: Coordinates;\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\ntype Props = MapStateProps & DispatchProps;\n\nconst Map = (props: Props) => {\n  const { coordinates } = props;\n  const { latitude, longitude } = coordinates;\n  const styles = useStyles();\n  const [viewport, setViewport] = useState({\n    width: 650,\n    height: 400,\n    latitude,\n    longitude,\n    zoom: 7,\n    bearing: 0,\n    pitch: 0,\n  });\n  const mapTheme = 'streets-v11';\n\n  useEffect(() => {\n    const gotoCurrentPlace = () => {\n      const viewportCurrent = {\n        ...viewport,\n        longitude,\n        latitude,\n        zoom: 10,\n        transitionDuration: 'auto',\n        transitionInterpolator: new FlyToInterpolator(),\n        transitionEasing: easeCubic,\n      };\n      setViewport(viewportCurrent);\n    };\n\n    gotoCurrentPlace();\n  }, [coordinates, latitude, longitude]);\n\n  return (\n    <>\n      <div id=\"map-container\" className={styles.mapContainer}>\n        <MapGL\n          {...viewport}\n          onViewportChange={setViewport}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          mapStyle={`mapbox://styles/mapbox/${mapTheme}`}\n          attributionControl\n          width=\"100%\"\n        >\n          <MapMarker />\n          <div className={styles.scaler}>\n            <ScaleControl maxWidth={100} unit=\"metric\" />\n          </div>\n          <GeolocateControl\n            className={styles.geolocateStyle}\n            positionOptions={{ enableHighAccuracy: true }}\n            trackUserLocation\n          />\n        </MapGL>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  coordinates: state.coordinates,\n});\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Map);\n","/* eslint-disable no-useless-computed-key */\nimport React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableContainer,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n} from '@material-ui/core';\n\nimport Map from './map';\n\nimport { NAVBAR_BTNS } from '../constantas/common';\nimport { Weather48HoursProp, HistoryItem } from '../types';\nimport { addCityToHistory } from '../redux/actions';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'flex-end',\n    minHeight: 550,\n    padding: 40,\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n    },\n    ['@media (max-width: 520px)']: {\n      padding: '20px 20px 40px',\n    },\n    [theme.breakpoints.down('sm')]: {\n      padding: '10px 10px 40px',\n    },\n  },\n  info: {\n    width: 400,\n    marginRight: 20,\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: 40,\n      marginRight: 0,\n    },\n  },\n  table: {\n    minWidth: 250,\n    '& td, & td:last-child, & td:first-child': {\n      padding: '5px 7px',\n    },\n    '& td, & th': {\n      fontSize: '1rem',\n    },\n  },\n  headRow: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  tableHeader: {\n    color: theme.palette.text.secondary,\n  },\n}));\n\ninterface MapStateProps {\n  weather48Hours: Weather48HoursProp;\n}\n\ninterface OwnProps {\n  title: string;\n}\n\ntype Props = MapStateProps & OwnProps;\n\nconst DayWeather = (props: Props) => {\n  const { title, weather48Hours } = props;\n  const styles = useStyles();\n  const today = new Date();\n  const day = title === NAVBAR_BTNS[1] ? today : new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const level = day.getDate();\n  const date = day.toLocaleDateString('ru-RU', {\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long',\n  });\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.info}>\n        <Typography variant=\"h2\" component=\"h2\">\n          {title}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {date}\n        </Typography>\n        <TableContainer component={Paper}>\n          <Table className={styles.table} size=\"small\" aria-label={`${title} weather`}>\n            <TableHead>\n              <TableRow className={styles.headRow}>\n                <TableCell className={styles.tableHeader}>Время</TableCell>\n                <TableCell className={styles.tableHeader}>Температура</TableCell>\n                <TableCell className={styles.tableHeader}>Описание</TableCell>\n                <TableCell className={styles.tableHeader}>Ветер</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {weather48Hours\n                ? weather48Hours.data.map((item: any) => {\n                    const { time, temperature, summary, windSpeed } = item;\n                    const timeConverted = new Date(time * 1000);\n                    const hoursView = (hour: number) => (hour < 10 ? `0${hour}` : hour);\n                    const isRender =\n                      level === timeConverted.getDate() && timeConverted.getHours() % 3 === 0;\n\n                    return isRender ? (\n                      <TableRow key={item.time}>\n                        <TableCell>\n                          {`${hoursView(timeConverted.getHours())}: ${timeConverted.getMinutes()}0`}\n                        </TableCell>\n                        <TableCell>{`${temperature} °C`}</TableCell>\n                        <TableCell>{summary}</TableCell>\n                        <TableCell>{`${windSpeed} м/с`}</TableCell>\n                      </TableRow>\n                    ) : null;\n                  })\n                : null}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n      <Map />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  weather48Hours: state.weather48Hours,\n});\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps, OwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(DayWeather);\n","import React, { useEffect } from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport theme from '../themes/theme';\nimport getCoordinates from '../services/get-coordinates';\nimport getWeatherByCoordinates from '../services/get-weather';\nimport {\n  refreshCoordinates,\n  changeCity,\n  changeCountry,\n  changeWeatherInfo,\n  changeCurrentTemperature,\n  changeWeatherForNext48Hours,\n  changeWeatherWeek,\n} from '../redux/actions';\nimport { Coordinates, Weather48HoursProp, WeatherWeekProp } from '../types';\nimport { reverseGeocoding } from '../services/opencagedata';\n\n// components\nimport Navbar from './navbar';\nimport CurrentWeather from './current-weather';\nimport SavedCities from './saved-cities';\nimport Week from './week';\nimport DayWeather from './day-weather';\n\n// contantas\nimport { NAVBAR_BTNS } from '../constantas/common';\n\n// TODO round temparatures to 1 number after comma\nconst useStyles = makeStyles(() => ({\n  container: {\n    position: 'relative',\n    maxWidth: 1200,\n    height: '95%',\n    margin: '20px auto',\n    boxShadow: theme.shadows[5],\n  },\n  sceleton: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  addBtn: {\n    position: 'absolute',\n    top: 70,\n    right: 10,\n  },\n}));\n\ninterface MapStateProps {\n  currentTab: string;\n  temperature: number;\n  coordinates: Coordinates;\n}\n\ninterface DispatchProps {\n  setCoordinates: (data: Coordinates) => void;\n  setCity: (str: string) => void;\n  setCountry: (str: string) => void;\n  setWeatherInfo: (str: string) => void;\n  setCurrentTemperature: (numb: number) => void;\n  setWeather48hours: (data: Weather48HoursProp) => void;\n  setWeatherWeek: (data: any) => void;\n}\n\ntype AppProps = MapStateProps & DispatchProps;\n\nconst App = (props: AppProps) => {\n  const {\n    temperature,\n    currentTab,\n    coordinates,\n    setCoordinates,\n    setCity,\n    setCountry,\n    setWeatherInfo,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherWeek,\n  } = props;\n  // TODO вроде как CurrentWeather отличаетсяна разных страницах\n  const styles = useStyles();\n\n  useEffect(() => {\n    getCoordinates().then((data) => {\n      console.log('getCoordinates data: ', data);\n      const { latitude, longitude } = data;\n\n      setCoordinates({ latitude, longitude });\n    });\n  }, [\n    setCoordinates,\n    setCity,\n    setCountry,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherInfo,\n    setWeatherWeek,\n  ]);\n\n  useEffect(() => {\n    console.log('здесь же должно меняться!!!');\n    const { latitude, longitude } = coordinates;\n    reverseGeocoding(latitude, longitude).then((data) => {\n      // const timezone = data.results[0].annotations.timezone.name;\n      const { city, country } = data.results[0].components;\n      setCity(city);\n      setCountry(country);\n      if (city) {\n        window.history.pushState({ page: city }, city, `city=${city}`);\n      }\n      // console.log('window.history: ', window.history)\n    });\n    getWeatherByCoordinates(latitude, longitude, 'ru')\n      .then((weather) => {\n        console.log('weather: ', weather);\n        setWeather48hours(weather.hourly);\n        setWeatherWeek(weather.daily);\n        setCurrentTemperature(weather.currently.temperature);\n        const txt = `${weather.currently.summary}, Ветер - ${weather.currently.windSpeed} м/с`;\n        setWeatherInfo(txt);\n      })\n      .catch((e) => {\n        console.log('error: ', e);\n        // TODO show popup with error\n      });\n  }, [\n    coordinates,\n    setCity,\n    setCountry,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherInfo,\n    setWeatherWeek,\n  ]);\n  // TODO delete from mapStateProps coordinates\n  const componentMaps = new Map();\n  componentMaps.set(NAVBAR_BTNS[0], <SavedCities />);\n  componentMaps.set(NAVBAR_BTNS[1], <DayWeather title={NAVBAR_BTNS[1]} />);\n  componentMaps.set(NAVBAR_BTNS[2], <DayWeather title={NAVBAR_BTNS[2]} />);\n  componentMaps.set(NAVBAR_BTNS[3], <Week />);\n  // TODO может скелетоны перенести внутрь CurrentWeather component\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={styles.container}>\n        <Navbar />\n        {temperature === null ? (\n          <div className={styles.sceleton}>\n            <Skeleton variant=\"circle\" width={50} height={50} className={styles.addBtn} />\n            <Skeleton variant=\"text\" width={50} height={70} />\n            <Skeleton variant=\"text\" width={300} height={50} />\n            <Skeleton variant=\"rect\" width={300} height={118} />\n          </div>\n        ) : (\n          <CurrentWeather />\n        )}\n        {componentMaps.get(currentTab)}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  currentTab: state.currentTab,\n  temperature: state.temperature,\n  coordinates: state.coordinates,\n});\n\nconst mapDispatchToProps = {\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\n  setCity: (str: string) => changeCity(str),\n  setCountry: (str: string) => changeCountry(str),\n  setWeatherInfo: (str: string) => changeWeatherInfo(str),\n  setCurrentTemperature: (numb: number) => changeCurrentTemperature(numb),\n  setWeather48hours: (data: Weather48HoursProp) => changeWeatherForNext48Hours(data),\n  setWeatherWeek: (data: WeatherWeekProp) => changeWeatherWeek(data),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(App);\n\n// TODO env-cmd разобраться что за модуль\n// TODO App ConnectedApp поменять местами\n","import {\n  REFRESH_COORDINATES,\n  CHANGE_CURRENT_TAB,\n  CHANGE_CITY,\n  CHANGE_COUNTRY,\n  CHANGE_TODAY_WEATHER_INFO,\n  CHANGE_CURRENT_TEMPERATURE,\n  CHANGE_WEATHER_FOR_NEXT_48_HOURS,\n  CHANGE_WEEK_WEATHER,\n  ADD_CITY_TO_HISTORY,\n  DELETE_CITY_FROM_HISTORY,\n  CLEAR_HISTORY,\n} from './action-types';\nimport { NAVBAR_BTNS, CITIES_LIST } from '../constantas/common';\nimport { StoreType } from '../types';\nimport FAKE_HISTORY from '../services/fake-history';\n\nconst ls = localStorage.getItem(CITIES_LIST);\nconst history = ls === null ? FAKE_HISTORY : JSON.parse(ls);\n// HistoryItem  is shape of {\n//   color,\n//   id,\n//   city,\n//   coordinates,\n// }\n\nconst initialState: StoreType = {\n  currentTab: NAVBAR_BTNS[0],\n  coordinates: {\n    latitude: 0,\n    longitude: 0,\n  },\n  city: '',\n  country: '',\n  temperature: null,\n  weatherInfo: '',\n  weather48Hours: null,\n  weatherWeek: null,\n  history,\n};\n\nconst reducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case REFRESH_COORDINATES:\n      return {\n        ...state,\n        coordinates: action.coordinates,\n      };\n    case CHANGE_CURRENT_TAB:\n      return {\n        ...state,\n        currentTab: action.currentTab,\n      };\n    case CHANGE_CITY:\n      return {\n        ...state,\n        city: action.city,\n      };\n    case CHANGE_COUNTRY:\n      return {\n        ...state,\n        country: action.country,\n      };\n    case CHANGE_TODAY_WEATHER_INFO:\n      return {\n        ...state,\n        weatherInfo: action.weatherInfo,\n      };\n    case CHANGE_CURRENT_TEMPERATURE:\n      return {\n        ...state,\n        temperature: action.temperature,\n      };\n    case CHANGE_WEATHER_FOR_NEXT_48_HOURS:\n      return {\n        ...state,\n        weather48Hours: action.weather48Hours,\n      };\n    case CHANGE_WEEK_WEATHER:\n      return {\n        ...state,\n        weatherWeek: action.weatherWeek,\n      };\n    case ADD_CITY_TO_HISTORY:\n      return {\n        ...state,\n        history: [...state.history, action.history],\n      };\n    case DELETE_CITY_FROM_HISTORY:\n      return {\n        ...state,\n        history: state.history.filter((item) => item.id !== action.id),\n      };\n    case CLEAR_HISTORY:\n      return {\n        ...state,\n        history: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export default [\n  {\n    id: 'aaa-AAA_999999:0',\n    city: 'Барнаул',\n    coordinates: {\n      latitude: 53.3606,\n      longitude: 83.7636,\n    },\n    color: '#FFAA22',\n  },\n  {\n    id: 'aaa-AAA_999999:1',\n    city: 'Москва',\n    coordinates: {\n      latitude: 55.7504461,\n      longitude: 37.6174943,\n    },\n    color: '#55AA22',\n  },\n  {\n    id: 'aaa-AAA_999999:2',\n    city: 'Красноярск',\n    coordinates: {\n      latitude: 56.0090968,\n      longitude: 92.8725147,\n    },\n    color: '#BBAA22',\n  },\n];\n","import store from './store';\nimport { ADD_CITY_TO_HISTORY, CLEAR_HISTORY, DELETE_CITY_FROM_HISTORY } from './action-types';\nimport { CITIES_LIST } from '../constantas/common';\n\nconst middleware = () => {\n  return (next: any) => {\n    return (action: any) => {\n      if (action.type === ADD_CITY_TO_HISTORY) {\n        const state = store.getState();\n        const newHistory = [...state.history, action.history];\n\n        localStorage.removeItem(CITIES_LIST);\n        localStorage.setItem(CITIES_LIST, JSON.stringify(newHistory));\n      }\n      if (action.type === CLEAR_HISTORY) {\n        localStorage.removeItem(CITIES_LIST);\n      }\n      if (action.type === DELETE_CITY_FROM_HISTORY) {\n        const state = store.getState();\n        const newHistory = state.history.filter((item) => item.id !== action.id);\n\n        localStorage.removeItem(CITIES_LIST);\n        localStorage.setItem(CITIES_LIST, JSON.stringify(newHistory));\n      }\n      return next(action);\n    };\n  };\n};\n\nexport default middleware;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, storeEnhancers(applyMiddleware(middleware)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}