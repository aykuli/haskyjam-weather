{"version":3,"sources":["themes/theme.ts","constantas/api-keys.ts","services/get-coordinates.ts","services/get-weather.ts","utils/temperature-fit.ts","redux/actions.ts","redux/action-types.ts","services/opencagedata.ts","constantas/common.ts","components/navbar.tsx","services/color-generator.ts","components/current-weather.tsx","components/history-table.tsx","components/history-modal.tsx","components/saved-cities.tsx","components/week.tsx","components/map-marker.tsx","components/map.tsx","components/day-weather.tsx","components/popup-message.tsx","components/error-indicator.tsx","components/error-boundry.tsx","components/app.tsx","redux/reducer.ts","services/fake-history.ts","redux/middleware.ts","redux/store.ts","index.tsx"],"names":["theme","createMuiTheme","palette","type","primary","main","contrastText","secondary","text","background","default","typography","fontFamily","fontSize","h1","lineHeight","fontWeight","color","margin","h2","h3","padding","h6","body1","body2","button","caption","spacing","factor","overrides","MuiCssBaseline","fontStyle","MuiInput","underline","borderBottom","responsiveFontSizes","OPENCAGEDATA_KEY","getCoordinates","a","fetch","response","json","data","city","country","loc","split","lat","lng","latitude","Number","longitude","getWeatherByCoordinates","lang","url","temperatureZeroFit","n","toString","numberFit","toFixed","refreshCoordinates","coordinates","addCityToHistory","history","settlement","headers","NAVBAR_BTNS","useStyles","makeStyles","createStyles","root","display","justifyContent","alignItems","flexWrap","backgroundColor","activeTab","dark","btnGroup","marginBottom","search","position","borderRadius","shape","fade","common","white","marginLeft","width","breakpoints","up","searchIcon","height","top","left","pointerEvents","inputRoot","minWidth","mapDispatchToProps","changeCurrentTab","newTab","currentTab","setCoordinates","connect","state","props","styles","handleTab","e","innerText","target","className","ButtonGroup","size","aria-label","map","btn","Button","key","onClick","token","query","autoload","placeholder","onChange","console","log","area","forwardGeocoding","then","results","geometry","getRandomColor","i","Math","floor","random","flexDirection","boxShadow","shadows","addCity","zIndex","right","setNewCityToHistory","temperature","weatherInfo","fakerator","Fakerator","date","Date","Intl","DateTimeFormat","year","month","day","format","getDate","Typography","variant","component","Tooltip","title","Fab","id","masked","headCells","numeric","label","EnhancedTableHead","TableHead","TableRow","headCell","TableCell","align","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","flex","EnhancedTableToolbar","setEmptyHistory","classes","Toolbar","IconButton","paper","table","visuallyHidden","border","clip","overflow","showHistory","slice","reverse","React","useState","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","min","length","Paper","TableContainer","Table","aria-labelledby","TableBody","row","fixedLat","fixedLng","hover","role","tabIndex","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","event","newPage","onChangeRowsPerPage","parseInt","value","modal","outline","HistoryModal","isOpen","hideHistory","Modal","aria-describedby","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","container","gridTemplateColumns","gridGap","cursor","opacity","deleteBtn","deleteAllBtn","deleteCityFromHistory","removeCityToHistory","isShowHistoryModal","setIsShowHistoryModal","showList","Alert","severity","cityData","Card","handleRequest","CardContent","CardActions","weekDays","textAlign","weatherWeek","today","firstDay","getTime","nextWeek","option","week","temperatureMin","temperatureMax","push","weekDay","toLocaleDateString","weekday","item","temperatureFitted","elevation","marker","transform","user","fill","error","popup","maxWidth","temperatureCurrent","isShowPopup","setIsShowPopup","onKeyDown","offsetLeft","offsetTop","closeOnClick","closeButton","anchor","mapContainer","marginTop","down","mapControllers","btnGroupAndTheme","fullscreenControl","bottom","scaler","modalWrap","geolocateStyle","zoom","bearing","pitch","viewport","setViewport","useEffect","viewportCurrent","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","gotoCurrentPlace","onViewportChange","mapboxApiAccessToken","mapStyle","attributionControl","unit","positionOptions","enableHighAccuracy","trackUserLocation","minHeight","info","marginRight","headRow","tableHeader","weather48Hours","level","hour","time","summary","windSpeed","timeConverted","isRender","getHours","windFitted","getMinutes","paddingTop","msgWrap","flexGrow","PopupMessage","msg","errorContainer","titleWrap","ErrorIndicator","ErrorBoundry","isWasError","this","setState","children","Component","sceleton","addBtn","setCity","str","setCountry","setWeatherInfo","setCurrentTemperature","numb","setWeather48hours","setWeatherWeek","setMsg","timerId","catch","setTimeout","clearTimeout","reverseGeocoding","components","weather","hourly","daily","numberFitted","currently","txt","componentMaps","Map","set","ThemeProvider","CssBaseline","Skeleton","get","ls","localStorage","getItem","JSON","parse","initialState","reducer","action","filter","middleware","next","store","getState","newHistory","removeItem","setItem","stringify","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5f0a660.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport '@openfonts/ubuntu-condensed_cyrillic';\r\n\r\nconst ubuntuCondensed = {\r\n  fontFamily: 'Ubuntu Condensed',\r\n  fontStyle: 'normal',\r\n  fontWeight: '400',\r\n};\r\n// palette created with material palette generator https://material.io/inline-tools/color/\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#4ed6b8',\r\n      contrastText: '#ffffff',\r\n    },\r\n    secondary: {\r\n      main: '#ffffff', // Complementary color to primary\r\n      contrastText: '#3d4451',\r\n    },\r\n    text: {\r\n      primary: '#3d4451',\r\n      secondary: '#ffffff',\r\n    },\r\n    background: {\r\n      default: '#ffffff',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: 'Ubuntu Condensed',\r\n    fontSize: 16,\r\n    h1: {\r\n      fontSize: '3.5rem',\r\n      lineHeight: '1.2',\r\n      fontWeight: 'bold',\r\n      color: '#3d4451',\r\n      margin: '10px 0 30px',\r\n    },\r\n    h2: {\r\n      fontSize: '2rem',\r\n      lineHeight: '1.2',\r\n      fontWeight: 'bold',\r\n      color: '#3d4451',\r\n      margin: '20px 0 20px',\r\n    },\r\n    h3: {\r\n      fontSize: '1.6rem',\r\n      lineHeight: '1.2',\r\n      fontWeight: 'bold',\r\n      color: '#3d4451',\r\n      padding: '5px 0 5px',\r\n    },\r\n    h6: {\r\n      fontSize: '1.2rem',\r\n      lineHeight: '1.2',\r\n      fontWeight: 'bold',\r\n      color: '#3d4451',\r\n      margin: '10px 0 10px',\r\n    },\r\n    body1: {\r\n      fontSize: '1.6rem',\r\n      lineHeight: '1.6',\r\n      color: '#ffffff',\r\n    },\r\n    body2: {\r\n      fontSize: '1.6rem',\r\n      lineHeight: '1.4',\r\n      color: '#3d4451',\r\n      padding: '5px 0 5px',\r\n    },\r\n    button: {\r\n      fontSize: '1rem',\r\n      lineHeight: '1.4',\r\n      color: '#403d51',\r\n    },\r\n    caption: {\r\n      fontSize: '1.2rem',\r\n      lineHeight: '1',\r\n      color: '#000000',\r\n    },\r\n  },\r\n  spacing: (factor) => `${0.25 * factor}rem`, // (Bootstrap strategy)\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '@font-face': [ubuntuCondensed],\r\n      },\r\n    },\r\n    MuiInput: {\r\n      underline: {\r\n        '&&&&:hover:before': {\r\n          borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default responsiveFontSizes(theme);\r\n","export const IP_INFO_KEY = 'abb04b3b63728f';\r\nexport const OPEN_WEATHER_KEY = '612f3911b66f3c4db9ea235ee7c23612';\r\nexport const DARKSKY_KEY = 'eefc04453f3143682c3c88d3669c3546';\r\nexport const MAPBOX_TOKEN =\r\n  'pk.eyJ1IjoiYXlrdWxpIiwiYSI6ImNrM2pybXF5MjA0OWczcG14ZzdxNXBlYmMifQ.tYv6CcePP02kbiXAJ-p_Mw';\r\nexport const DADATA = '41abac0b9197748c810ee5b27d23d04998ecc55b';\r\nexport const OPENCAGEDATA_KEY = '08e88a2c40fb4a34966ad1a41752ff28';\r\n\r\n// TODO переснести в env=production env-cmd\r\n","import { IP_INFO_KEY } from '../constantas/api-keys';\r\n\r\nconst getCoordinates = async () => {\r\n  const response = await fetch(`https://ipinfo.io?token=${IP_INFO_KEY}`);\r\n  const data = await response.json();\r\n  const { city, country } = data;\r\n  const [lat, lng] = data.loc.split(',');\r\n  return {\r\n    latitude: Number(lat),\r\n    longitude: Number(lng),\r\n    city,\r\n    country,\r\n  };\r\n};\r\n\r\nexport default getCoordinates;\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { OPEN_WEATHER_KEY, DARKSKY_KEY } from '../constantas/api-keys';\r\n\r\ninterface RequestCors {\r\n  type: string;\r\n}\r\n\r\nconst getWeatherByCoordinates = async (latitude: number, longitude: number, lang: string) => {\r\n  // try to fetcj to opencagedata. Work bad\r\n  // const units = 'metric';\r\n  // const url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&APPID=${OPEN_WEATHER_KEY}&lang=${lang}&units=${units}`;\r\n  // const response = await fetch(url);\r\n\r\n  const unit = 'si';\r\n  const url = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${DARKSKY_KEY}/${latitude},${longitude}?lang=${lang}&units=${unit}`;\r\n\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport default getWeatherByCoordinates;\r\n","export const temperatureZeroFit = (n: number): number => (n.toString() === '-0' ? 0 : n);\r\nexport const numberFit = (n: number): number => Number(n.toFixed(0));\r\n","import {\r\n  REFRESH_COORDINATES,\r\n  CHANGE_CURRENT_TAB,\r\n  CHANGE_CITY,\r\n  CHANGE_COUNTRY,\r\n  CHANGE_TODAY_WEATHER_INFO,\r\n  CHANGE_CURRENT_TEMPERATURE,\r\n  CHANGE_WEATHER_FOR_NEXT_48_HOURS,\r\n  CHANGE_WEEK_WEATHER,\r\n  ADD_CITY_TO_HISTORY,\r\n  DELETE_CITY_FROM_HISTORY,\r\n  CLEAR_HISTORY,\r\n} from './action-types';\r\nimport { HistoryItem, Weather48HoursProp, WeatherWeekProp, Coordinates } from '../types';\r\n\r\ninterface CoordinatesProps {\r\n  type: string;\r\n  coordinates: Coordinates;\r\n}\r\n\r\ninterface CurrentTabProps {\r\n  type: string;\r\n  currentTab: string;\r\n}\r\n\r\ninterface CityProps {\r\n  type: string;\r\n  city: string;\r\n}\r\n\r\ninterface CountryProps {\r\n  type: string;\r\n  country: string;\r\n}\r\n\r\ninterface WeatherInfoProps {\r\n  type: string;\r\n  weatherInfo: string;\r\n}\r\n\r\ninterface TemperatureProps {\r\n  type: string;\r\n  temperature: number;\r\n}\r\n\r\ninterface Weather48Props {\r\n  type: string;\r\n  weather48Hours: Weather48HoursProp | null;\r\n}\r\n\r\ninterface WeekWeatherProps {\r\n  type: string;\r\n  weatherWeek: any | null;\r\n}\r\n\r\ninterface RemoveCityProps {\r\n  type: string;\r\n  id: string;\r\n}\r\n\r\ninterface HistoryProps {\r\n  type: string;\r\n  history: HistoryItem;\r\n}\r\n\r\ninterface EmptyHistoryProps {\r\n  type: string;\r\n  history: Array<HistoryItem>;\r\n}\r\n\r\nexport const refreshCoordinates = ({ latitude, longitude }: Coordinates): CoordinatesProps => {\r\n  return {\r\n    type: REFRESH_COORDINATES,\r\n    coordinates: { latitude, longitude },\r\n  };\r\n};\r\n\r\nexport const changeCurrentTab = (currentTab: string): CurrentTabProps => {\r\n  return {\r\n    type: CHANGE_CURRENT_TAB,\r\n    currentTab,\r\n  };\r\n};\r\n\r\nexport const changeCity = (city: string): CityProps => {\r\n  return {\r\n    type: CHANGE_CITY,\r\n    city,\r\n  };\r\n};\r\n\r\nexport const changeCountry = (country: string): CountryProps => {\r\n  return {\r\n    type: CHANGE_COUNTRY,\r\n    country,\r\n  };\r\n};\r\n\r\nexport const changeWeatherInfo = (weatherInfo: string): WeatherInfoProps => {\r\n  return {\r\n    type: CHANGE_TODAY_WEATHER_INFO,\r\n    weatherInfo,\r\n  };\r\n};\r\n\r\nexport const changeCurrentTemperature = (temperature: number): TemperatureProps => {\r\n  return {\r\n    type: CHANGE_CURRENT_TEMPERATURE,\r\n    temperature,\r\n  };\r\n};\r\n\r\nexport const changeWeatherForNext48Hours = (weather48Hours: Weather48HoursProp): Weather48Props => {\r\n  return {\r\n    type: CHANGE_WEATHER_FOR_NEXT_48_HOURS,\r\n    weather48Hours,\r\n  };\r\n};\r\n\r\nexport const changeWeatherWeek = (weatherWeek: WeatherWeekProp): WeekWeatherProps => {\r\n  return {\r\n    type: CHANGE_WEEK_WEATHER,\r\n    weatherWeek,\r\n  };\r\n};\r\n\r\nexport const addCityToHistory = (history: HistoryItem): HistoryProps => {\r\n  return {\r\n    type: ADD_CITY_TO_HISTORY,\r\n    history,\r\n  };\r\n};\r\n\r\nexport const removeCityToHistory = (id: string): RemoveCityProps => {\r\n  console.log('id: ', id);\r\n  return {\r\n    type: DELETE_CITY_FROM_HISTORY,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const clearHistory = (): EmptyHistoryProps => {\r\n  return {\r\n    type: CLEAR_HISTORY,\r\n    history: [],\r\n  };\r\n};\r\n","export const REFRESH_COORDINATES = 'REFRESH_COORDINATES';\r\nexport const CHANGE_CURRENT_TAB = 'CHANGE_CURRENT_TAB';\r\nexport const CHANGE_CITY = 'CHANGE_CITY';\r\nexport const CHANGE_COUNTRY = 'CHANGE_COUNTRY';\r\nexport const CHANGE_TODAY_WEATHER_INFO = 'CHANGE_TODAY_WEATHER_INFO';\r\nexport const CHANGE_CURRENT_TEMPERATURE = 'CHANGE_CURRENT_TEMPERATURE';\r\nexport const CHANGE_WEATHER_FOR_NEXT_48_HOURS = 'CHANGE_WEATHER_FOR_NEXT_48_HOURS';\r\nexport const CHANGE_WEEK_WEATHER = 'CHANGE_WEEK_WEATHER';\r\nexport const ADD_CITY_TO_HISTORY = 'ADD_CITY_TO_HISTORY';\r\nexport const DELETE_CITY_FROM_HISTORY = 'DELETE_CITY_FROM_HISTORY';\r\nexport const CLEAR_HISTORY = 'CLEAR_HISTORY';\r\n","import { OPENCAGEDATA_KEY } from '../constantas/api-keys';\r\n\r\nasync function forwardGeocoding(settlement: string, lang = 'ru') {\r\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${settlement}&countrycode=${lang}&key=${OPENCAGEDATA_KEY}&language=${lang}&pretty=1&no_annotations=1`;\r\n  const headers: any = { 'Content-Type': 'application/json' };\r\n\r\n  const response = await fetch(url, headers);\r\n  return response.json();\r\n}\r\n\r\nasync function reverseGeocoding(latitude: number, longitude: number, lang = 'ru') {\r\n  const url = `https://api.opencagedata.com/geocode/v1/json?q=${latitude}%2C${longitude}&key=${OPENCAGEDATA_KEY}&language=${lang}&pretty=1`;\r\n  const response = await fetch(url);\r\n  return response.json();\r\n}\r\n\r\nexport { forwardGeocoding, reverseGeocoding };\r\n","export const NAVBAR_BTNS = ['ИСТОРИЯ', 'СЕГОДНЯ', 'ЗАВТРА', 'НЕДЕЛЯ'];\r\nexport const CITIES_LIST = 'CITIES_LIST';\r\nexport const SEARCH_PLACEHOLDER = 'Введите адрес для поиска';\r\nexport const FETCH_WEATHER_FAILED =\r\n  'Сервис запроса погоды не работает. Просим перезагрузить страницу.';\r\nexport const FETCH_GEOCODING_FAILED =\r\n  'Сервис геолокации не работает. Просим перезагрузить страницу.';\r\nexport const FETCH_COORDINATES_FAILED =\r\n  'Коориданты не определились. Может у вас включен запрет на определение координат по IP';\r\n","/* eslint-disable no-useless-computed-key */\r\nimport React from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { ReactDadata } from 'react-dadata';\r\nimport { ButtonGroup, Button } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles, fade, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport { NAVBAR_BTNS, SEARCH_PLACEHOLDER } from '../constantas/common';\r\nimport { DADATA } from '../constantas/api-keys';\r\n\r\nimport { Coordinates, DadataSuggestion } from '../types';\r\n\r\nimport { changeCurrentTab as changeTab, refreshCoordinates } from '../redux/actions';\r\nimport { forwardGeocoding } from '../services/opencagedata';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'flex-end',\r\n      flexWrap: 'wrap',\r\n      backgroundColor: theme.palette.primary.main,\r\n      padding: '10px 40px',\r\n    },\r\n    activeTab: {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    btnGroup: {\r\n      ['@media (max-width: 624px)']: {\r\n        marginBottom: 20,\r\n        margin: 'auto',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n      ['@media (max-width: 624px)']: {\r\n        marginBottom: 10,\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: -40,\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      minWidth: 250,\r\n      width: '100%',\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\ninterface MapStateProps {\r\n  currentTab: string;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setCoordinates: (data: Coordinates) => void;\r\n  changeCurrentTab: (newTab: string) => void;\r\n}\r\n\r\ntype AppProps = MapStateProps & DispatchProps;\r\n\r\nconst Navbar = (props: AppProps) => {\r\n  const { changeCurrentTab, currentTab, setCoordinates } = props;\r\n\r\n  const styles = useStyles();\r\n\r\n  const handleTab = (\r\n    e: React.MouseEvent<HTMLButtonElement> | React.KeyboardEvent<HTMLButtonElement>\r\n  ) => {\r\n    const { innerText } = e.target as HTMLButtonElement;\r\n    changeCurrentTab(innerText);\r\n  };\r\n\r\n  const handleSearch = (e: DadataSuggestion) => {\r\n    console.log('e: ', e);\r\n    const { city, settlement, area } = e.data;\r\n    let place;\r\n    if (city) {\r\n      place = city;\r\n    } else if (settlement) {\r\n      place = settlement;\r\n    } else {\r\n      place = area;\r\n    }\r\n    forwardGeocoding(place).then((data) => {\r\n      const coordinates = data.results[0].geometry;\r\n      setCoordinates({ latitude: coordinates.lat, longitude: coordinates.lng });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <ButtonGroup\r\n        size=\"large\"\r\n        color=\"secondary\"\r\n        aria-label=\"wheather for today, tomorrow or for week\"\r\n        className={styles.btnGroup}\r\n      >\r\n        {NAVBAR_BTNS.map((btn) => {\r\n          return (\r\n            <Button\r\n              key={btn}\r\n              onClick={handleTab}\r\n              className={btn === currentTab ? styles.activeTab : ''}\r\n            >\r\n              {btn}\r\n            </Button>\r\n          );\r\n        })}\r\n      </ButtonGroup>\r\n      <div className={styles.search}>\r\n        <div className={styles.searchIcon}>\r\n          <SearchIcon color=\"secondary\" />\r\n        </div>\r\n        <div className={styles.inputRoot}>\r\n          <ReactDadata\r\n            token={DADATA}\r\n            query=\"\"\r\n            autoload\r\n            placeholder={SEARCH_PLACEHOLDER}\r\n            onChange={handleSearch}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  currentTab: state.currentTab,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeCurrentTab: (newTab: string) => changeTab(newTab),\r\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\r\n};\r\n\r\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","const getRandomColor = () => {\r\n  const letters = '0123456789ABCDEF';\r\n  let color = '#';\r\n  for (let i = 0; i < 6; i += 1) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n\r\nexport default getRandomColor;\r\n","import React from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Typography, Fab, Tooltip } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fakerator from 'fakerator';\r\n\r\nimport getRandomColor from '../services/color-generator';\r\nimport { addCityToHistory } from '../redux/actions';\r\nimport { Coordinates, HistoryItem } from '../types';\r\n\r\n// TODO icons\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  main: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    boxShadow: theme.shadows[1],\r\n  },\r\n  addCity: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 10,\r\n    right: 10,\r\n  },\r\n}));\r\n\r\nconst getDate = (lang: string) => {\r\n  const date = new Date();\r\n  const formatter = new Intl.DateTimeFormat(lang, {\r\n    year: 'numeric',\r\n    month: 'numeric',\r\n    day: 'numeric',\r\n  });\r\n  return formatter.format(date);\r\n};\r\n\r\ninterface MapStateProps {\r\n  city: string;\r\n  country: string;\r\n  temperature: number;\r\n  weatherInfo: string;\r\n  coordinates: Coordinates;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setNewCityToHistory: (item: HistoryItem) => void;\r\n}\r\n\r\ntype Props = MapStateProps & DispatchProps;\r\n\r\nconst CurrentWeather = (props: Props) => {\r\n  const { temperature, city, country, weatherInfo, coordinates, setNewCityToHistory } = props;\r\n\r\n  const fakerator = Fakerator('en-EN');\r\n\r\n  const handleAddCity = () => {\r\n    const id = fakerator.random.masked('aaa-AAA_999999:*');\r\n    const color = getRandomColor();\r\n    setNewCityToHistory({\r\n      id,\r\n      city,\r\n      coordinates,\r\n      color,\r\n    });\r\n  };\r\n\r\n  const styles = useStyles();\r\n  const date = getDate('ru');\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <Typography variant=\"h1\" component=\"p\">{`${temperature} °C`}</Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {city ? `${city}, ` : ''}\r\n        {country ? `${country}` : ''}\r\n      </Typography>\r\n      <>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {date}\r\n        </Typography>\r\n        <Typography variant=\"caption\" component=\"p\">\r\n          {weatherInfo}\r\n        </Typography>\r\n      </>\r\n      <Tooltip title=\"Add place to history\" aria-label=\"Add place to history\">\r\n        <Fab color=\"primary\" className={styles.addCity} onClick={handleAddCity}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  city: state.city,\r\n  country: state.country,\r\n  temperature: state.temperature,\r\n  weatherInfo: state.weatherInfo,\r\n  coordinates: state.coordinates,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\r\n};\r\n\r\nexport default connect<MapStateProps, DispatchProps>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CurrentWeather);\r\n","import React from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Table, IconButton, Tooltip } from '@material-ui/core';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport { clearHistory } from '../redux/actions';\r\nimport { HistoryItem } from '../types';\r\n\r\ninterface Data {\r\n  city: string;\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\ninterface HeadCell {\r\n  id: keyof Data;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n  { id: 'city', numeric: false, label: 'Населенный пункт' },\r\n  { id: 'latitude', numeric: true, label: 'Ширина' },\r\n  { id: 'longitude', numeric: true, label: 'Долгота' },\r\n];\r\n\r\nconst EnhancedTableHead = () => {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell key={headCell.id} align={headCell.numeric ? 'right' : 'left'}>\r\n            {' '}\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: theme.palette.secondary.main,\r\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: theme.palette.secondary.dark,\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  })\r\n);\r\n\r\ninterface TableToolbarProps {\r\n  setEmptyHistory: () => void;\r\n}\r\n\r\nconst EnhancedTableToolbar: React.FC<TableToolbarProps> = ({ setEmptyHistory }) => {\r\n  const classes = useToolbarStyles();\r\n  return (\r\n    <Toolbar className={classes.highlight}>\r\n      <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n        Сохраненные города\r\n      </Typography>\r\n      <Tooltip title=\"Clear history\">\r\n        <IconButton aria-label=\"delete\" onClick={() => setEmptyHistory()}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      padding: '20px 0 40px',\r\n    },\r\n    table: {\r\n      padding: 20,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })\r\n);\r\n\r\ninterface StateProps {\r\n  history: Array<HistoryItem>;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setEmptyHistory: () => void;\r\n}\r\n\r\ntype HistoryTableProps = StateProps & DispatchProps;\r\n\r\nconst HistoryTable: React.FC<HistoryTableProps> = (props) => {\r\n  const { history, setEmptyHistory } = props;\r\n  const showHistory = history.slice().reverse();\r\n\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, showHistory.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar setEmptyHistory={setEmptyHistory} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"medium\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead />\r\n            <TableBody>\r\n              {showHistory\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  const { id, city, coordinates } = row;\r\n                  const { latitude, longitude } = coordinates;\r\n                  const fixedLat = latitude ? latitude.toFixed(2) : null;\r\n                  const fixedLng = longitude ? longitude.toFixed(2) : null;\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={id}>\r\n                      <TableCell align=\"left\">{city}</TableCell>\r\n                      <TableCell align=\"right\">{fixedLat}</TableCell>\r\n                      <TableCell align=\"right\">{fixedLng}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 33 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={showHistory.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  history: state.history,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setEmptyHistory: () => clearHistory(),\r\n};\r\n\r\nexport default connect<StateProps, DispatchProps>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HistoryTable);\r\n","import React from 'react';\r\nimport { Modal, Backdrop } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport HistoryTable from './history-table';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    outline: 'none',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\ninterface Props {\r\n  isOpen: boolean;\r\n  hideHistory: () => void;\r\n}\r\n\r\nconst HistoryModal = (props: Props) => {\r\n  console.log('props: ', props);\r\n  const { isOpen, hideHistory } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"History of cities\"\r\n      aria-describedby=\"where user have been\"\r\n      open={isOpen}\r\n      onClose={hideHistory}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n      className={classes.modal}\r\n    >\r\n      <div>\r\n        <HistoryTable />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nexport default HistoryModal;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-useless-computed-key */\r\nimport React, { useState } from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Fab,\r\n  Tooltip,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport HistoryModal from './history-modal';\r\n\r\nimport { removeCityToHistory, clearHistory, refreshCoordinates } from '../redux/actions';\r\nimport { HistoryItem, Coordinates } from '../types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '10px 10px 40px',\r\n  },\r\n  history: {\r\n    display: 'grid',\r\n    gridTemplateColumns: '200px 200px 200px 200px',\r\n    gridGap: '20px 20px',\r\n    ['@media (max-width: 900px)']: {\r\n      gridTemplateColumns: '200px 200px',\r\n    },\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n    },\r\n  },\r\n  city: {\r\n    position: 'relative',\r\n    height: 100,\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor: theme.palette.primary.light,\r\n    opacity: 0.8,\r\n    '&:hover': {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  showHistory: {\r\n    height: '100%',\r\n  },\r\n  deleteBtn: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 5,\r\n    right: 5,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: 'none',\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n      boxShadow: theme.shadows[2],\r\n    },\r\n  },\r\n  deleteAllBtn: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: 10,\r\n    right: 10,\r\n  },\r\n}));\r\n\r\ninterface StateProps {\r\n  history: Array<HistoryItem>;\r\n}\r\n\r\ninterface DispatchProps {\r\n  deleteCityFromHistory: (id: string) => void;\r\n  setEmptyHistory: () => void;\r\n  setCoordinates: (data: Coordinates) => void;\r\n}\r\n\r\ntype SavedCitiesProps = StateProps & DispatchProps;\r\n\r\nconst SavedCities: React.FC<SavedCitiesProps> = (props) => {\r\n  const { history, deleteCityFromHistory, setEmptyHistory, setCoordinates } = props;\r\n  const [isShowHistoryModal, setIsShowHistoryModal] = useState<boolean>(false);\r\n  const styles = useStyles();\r\n\r\n  const showList = history.length < 8 ? history.slice() : history.slice(0, 7);\r\n  showList.reverse();\r\n\r\n  const handleRequest = (coordinates: Coordinates) => {\r\n    setCoordinates(coordinates);\r\n  };\r\n\r\n  const handleShowHistory = () => {\r\n    console.log('show history');\r\n    setIsShowHistoryModal(!isShowHistoryModal);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h2\" component=\"h2\">\r\n        Сохраненные города\r\n      </Typography>\r\n      <Tooltip title=\"Clear history\" aria-label=\"Clear history\">\r\n        <Fab color=\"primary\" className={styles.deleteAllBtn} onClick={setEmptyHistory}>\r\n          <DeleteIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      {showList.length === 0 ? (\r\n        <Alert severity=\"info\" variant=\"outlined\">\r\n          Ваша история пуста. Возможно, самое время пополнить коллекцию?\r\n        </Alert>\r\n      ) : (\r\n        <div className={styles.history}>\r\n          {showList.map((cityData: HistoryItem) => {\r\n            const { id, city, color, coordinates } = cityData;\r\n            return (\r\n              <Card\r\n                key={id}\r\n                className={styles.city}\r\n                style={{ backgroundColor: color }}\r\n                onClick={() => handleRequest(coordinates)}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"body1\" component=\"p\">\r\n                    {city}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Tooltip title={`Delete ${city}`} aria-label=\"Clear history\">\r\n                    <Fab\r\n                      size=\"small\"\r\n                      className={styles.deleteBtn}\r\n                      onClick={() => deleteCityFromHistory(id.toString())}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </Fab>\r\n                  </Tooltip>\r\n                </CardActions>\r\n              </Card>\r\n            );\r\n          })}\r\n          <Button variant=\"contained\" className={styles.showHistory} onClick={handleShowHistory}>\r\n            Показать всю историю\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {isShowHistoryModal ? (\r\n        <HistoryModal\r\n          isOpen={isShowHistoryModal}\r\n          hideHistory={() => setIsShowHistoryModal(false)}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  history: state.history,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteCityFromHistory: (id: any) => removeCityToHistory(id),\r\n  setEmptyHistory: () => clearHistory(),\r\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\r\n};\r\n\r\nexport default connect<StateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(SavedCities);\r\n","import React from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Paper, Typography } from '@material-ui/core';\n\nimport { HistoryItem, WeatherWeekProp } from '../types';\nimport { addCityToHistory } from '../redux/actions';\nimport { numberFit, temperatureZeroFit } from '../utils/temperature-fit';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    padding: '10px 40px 40px',\n  },\n  weekDays: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  day: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    height: 200,\n    padding: 20,\n  },\n  temperature: {\n    textAlign: 'right',\n  },\n}));\n\ninterface MapStateProps {\n  weatherWeek: WeatherWeekProp;\n}\n\ninterface DispatchProps {\n  setNewCityToHistory: (history: HistoryItem) => void;\n}\n\ntype MapProps = MapStateProps & DispatchProps;\n\nconst Week = (props: MapProps) => {\n  const { weatherWeek } = props;\n  const styles = useStyles();\n\n  const today = new Date();\n  const firstDay = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n  const nextWeek = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\n  const option = {\n    day: 'numeric',\n    month: 'long',\n  };\n\n  const week = [];\n  if (weatherWeek) {\n    for (let i = 1; i < 8; i += 1) {\n      const day = new Date(today.getTime() + i * 24 * 60 * 60 * 1000);\n      const { temperatureMin, temperatureMax } = weatherWeek.data[i];\n      const temperature = Math.floor((temperatureMin + temperatureMax) / 2);\n\n      week.push({\n        weekDay: day.toLocaleDateString('ru-RU', { weekday: 'long' }),\n        date: day.toLocaleDateString('ru-RU', { day: 'numeric', month: 'long' }),\n        temperature,\n      });\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Typography variant=\"h2\" component=\"h2\">\n        НЕДЕЛЯ\n      </Typography>\n      <Typography variant=\"body1\" component=\"p\">\n        {`${firstDay.toLocaleDateString('ru-RU', option)} - ${nextWeek.toLocaleDateString(\n          'ru-RU',\n          option\n        )}`}\n      </Typography>\n      <div className={styles.weekDays}>\n        {weatherWeek\n          ? week.map((item): any => {\n              const { weekDay, date, temperature } = item;\n              const temperatureFitted = temperatureZeroFit(numberFit(temperature));\n              return (\n                <Paper elevation={3} className={styles.day} key={weekDay}>\n                  <Typography variant=\"h3\" component=\"h3\">\n                    {date}\n                  </Typography>\n                  <Typography variant=\"body2\" component=\"p\">\n                    {weekDay}\n                  </Typography>\n                  <Typography variant=\"h1\" component=\"p\" className={styles.temperature}>\n                    {`${temperatureFitted} °C`}\n                  </Typography>\n                </Paper>\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  weatherWeek: state.weatherWeek,\n});\n\nconst mapDispatchToProps = {\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Week);\n","import React, { useState } from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { Marker, Popup } from 'react-map-gl';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport { HistoryItem, Coordinates } from '../types';\r\nimport { addCityToHistory } from '../redux/actions';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  marker: {\r\n    transform: 'translate(0, 0)',\r\n  },\r\n  user: {\r\n    position: 'relative',\r\n    cursor: 'pointer',\r\n    outline: 'none',\r\n    '& svg': {\r\n      fill: theme.palette.error.dark,\r\n    },\r\n  },\r\n  popup: {\r\n    maxWidth: '70%',\r\n    transform: 'none',\r\n\r\n    '& h2': {\r\n      margin: '0 0 10px 0',\r\n    },\r\n    '& p': {\r\n      margin: 0,\r\n    },\r\n    '& .mapboxgl-popup-content': {\r\n      minWidth: 50,\r\n      boxShadow: '2px 2px 10px rgba(0, 0, 0, .53)',\r\n    },\r\n  },\r\n}));\r\n\r\ninterface MapStateProps {\r\n  temperatureCurrent: number | null;\r\n  coordinates: Coordinates;\r\n  city: string;\r\n  country: string;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setNewCityToHistory: (history: HistoryItem) => void;\r\n}\r\n\r\ntype Props = MapStateProps & DispatchProps;\r\n\r\nconst MapMarker = (props: Props) => {\r\n  const { coordinates, temperatureCurrent, city, country } = props;\r\n  const { latitude, longitude } = coordinates;\r\n\r\n  const [isShowPopup, setIsShowPopup] = useState(false);\r\n\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={styles.user}\r\n        onClick={() => setIsShowPopup(!isShowPopup)}\r\n        onKeyDown={() => setIsShowPopup(!isShowPopup)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <Marker longitude={longitude} latitude={latitude} offsetLeft={-13} offsetTop={5}>\r\n          <RoomIcon />\r\n        </Marker>\r\n      </div>\r\n      {isShowPopup && (\r\n        <Popup\r\n          offsetLeft={0}\r\n          offsetTop={27}\r\n          latitude={latitude}\r\n          longitude={longitude}\r\n          onClose={() => setIsShowPopup(false)}\r\n          closeOnClick={false}\r\n          closeButton\r\n          anchor=\"left\"\r\n          className={styles.popup}\r\n        >\r\n          <div>\r\n            <Typography variant=\"h3\" component=\"p\">{`${temperatureCurrent} °C`}</Typography>\r\n            <Typography variant=\"body2\">{`${city}, ${country}`}</Typography>\r\n          </div>\r\n        </Popup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  coordinates: state.coordinates,\r\n  temperatureCurrent: state.temperature,\r\n  city: state.city,\r\n  country: state.country,\r\n});\r\n\r\ninterface DispatchProps {\r\n  setNewCityToHistory: (history: HistoryItem) => void;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\r\n};\r\n\r\nexport default connect<MapStateProps, DispatchProps>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MapMarker);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport MapGL, { FlyToInterpolator, GeolocateControl, ScaleControl } from 'react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport { easeCubic } from 'd3-ease';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport MapMarker from './map-marker';\r\n\r\nimport { MAPBOX_TOKEN } from '../constantas/api-keys';\r\nimport { addCityToHistory } from '../redux/actions';\r\nimport { HistoryItem, Coordinates } from '../types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mapContainer: {\r\n    position: 'relative',\r\n    marginTop: 'auto',\r\n    width: 'calc(100% - 420px)',\r\n    textAlign: 'right',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '100%',\r\n    },\r\n  },\r\n  mapControllers: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    zIndex: 2,\r\n    boxShadow: theme.shadows[2],\r\n  },\r\n  btnGroupAndTheme: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-end',\r\n    flexWrap: 'wrap',\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  fullscreenControl: {\r\n    position: 'absolute',\r\n    bottom: 40,\r\n    right: 10,\r\n  },\r\n  scaler: {\r\n    position: 'absolute',\r\n    bottom: 16,\r\n    right: 10,\r\n  },\r\n  modalWrap: {\r\n    width: '100vw',\r\n    backgroundColor: 'blue',\r\n  },\r\n  geolocateStyle: {\r\n    position: 'absolute',\r\n    bottom: 40,\r\n    right: 10,\r\n  },\r\n}));\r\n\r\ninterface MapStateProps {\r\n  coordinates: Coordinates;\r\n}\r\n\r\ninterface DispatchProps {\r\n  setNewCityToHistory: (history: HistoryItem) => void;\r\n}\r\n\r\ntype Props = MapStateProps & DispatchProps;\r\n\r\nconst Map = (props: Props) => {\r\n  const { coordinates } = props;\r\n  const { latitude, longitude } = coordinates;\r\n  const styles = useStyles();\r\n  const [viewport, setViewport] = useState({\r\n    width: 650,\r\n    height: 400,\r\n    latitude,\r\n    longitude,\r\n    zoom: 7,\r\n    bearing: 0,\r\n    pitch: 0,\r\n  });\r\n  const mapTheme = 'streets-v11';\r\n\r\n  useEffect(() => {\r\n    const gotoCurrentPlace = () => {\r\n      const viewportCurrent = {\r\n        ...viewport,\r\n        longitude,\r\n        latitude,\r\n        zoom: 10,\r\n        transitionDuration: 'auto',\r\n        transitionInterpolator: new FlyToInterpolator(),\r\n        transitionEasing: easeCubic,\r\n      };\r\n      setViewport(viewportCurrent);\r\n    };\r\n\r\n    gotoCurrentPlace();\r\n  }, [coordinates, latitude, longitude]);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"map-container\" className={styles.mapContainer}>\r\n        <MapGL\r\n          {...viewport}\r\n          onViewportChange={setViewport}\r\n          mapboxApiAccessToken={MAPBOX_TOKEN}\r\n          mapStyle={`mapbox://styles/mapbox/${mapTheme}`}\r\n          attributionControl\r\n          width=\"100%\"\r\n        >\r\n          <MapMarker />\r\n          <div className={styles.scaler}>\r\n            <ScaleControl maxWidth={100} unit=\"metric\" />\r\n          </div>\r\n          <GeolocateControl\r\n            className={styles.geolocateStyle}\r\n            positionOptions={{ enableHighAccuracy: true }}\r\n            trackUserLocation\r\n          />\r\n        </MapGL>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  coordinates: state.coordinates,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\r\n};\r\n\r\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(Map);\r\n","/* eslint-disable no-useless-computed-key */\r\nimport React from 'react';\r\nimport { connect, RootStateOrAny } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core';\r\n\r\nimport Map from './map';\r\n\r\nimport { NAVBAR_BTNS } from '../constantas/common';\r\nimport { numberFit, temperatureZeroFit } from '../utils/temperature-fit';\r\nimport { Weather48HoursProp, HistoryItem } from '../types';\r\nimport { addCityToHistory } from '../redux/actions';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'flex-end',\r\n    minHeight: 550,\r\n    padding: 40,\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center',\r\n    },\r\n    ['@media (max-width: 520px)']: {\r\n      padding: '20px 20px 40px',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '10px 10px 40px',\r\n    },\r\n  },\r\n  info: {\r\n    width: 400,\r\n    marginRight: 20,\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: 40,\r\n      marginRight: 0,\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 250,\r\n    '& td, & td:last-child, & td:first-child': {\r\n      padding: '5px 7px',\r\n    },\r\n    '& td, & th': {\r\n      fontSize: '1rem',\r\n    },\r\n  },\r\n  headRow: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  tableHeader: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\ninterface MapStateProps {\r\n  weather48Hours: Weather48HoursProp;\r\n}\r\n\r\ninterface OwnProps {\r\n  title: string;\r\n}\r\n\r\ntype Props = MapStateProps & OwnProps;\r\n\r\nconst DayWeather = (props: Props) => {\r\n  const { title, weather48Hours } = props;\r\n  const styles = useStyles();\r\n  const today = new Date();\r\n  const day = title === NAVBAR_BTNS[1] ? today : new Date(today.getTime() + 24 * 60 * 60 * 1000);\r\n  const level = day.getDate();\r\n  const date = day.toLocaleDateString('ru-RU', {\r\n    weekday: 'long',\r\n    day: 'numeric',\r\n    month: 'long',\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.info}>\r\n        <Typography variant=\"h2\" component=\"h2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {date}\r\n        </Typography>\r\n        <TableContainer component={Paper}>\r\n          <Table className={styles.table} size=\"small\" aria-label={`${title} weather`}>\r\n            <TableHead>\r\n              <TableRow className={styles.headRow}>\r\n                <TableCell className={styles.tableHeader}>Время</TableCell>\r\n                <TableCell className={styles.tableHeader}>Температура</TableCell>\r\n                <TableCell className={styles.tableHeader}>Описание</TableCell>\r\n                <TableCell className={styles.tableHeader}>Ветер</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {weather48Hours\r\n                ? weather48Hours.data.map((item: any) => {\r\n                    const { time, temperature, summary, windSpeed } = item;\r\n                    const timeConverted = new Date(time * 1000);\r\n                    const hoursView = (hour: number) => (hour < 10 ? `0${hour}` : hour);\r\n                    const isRender =\r\n                      level === timeConverted.getDate() && timeConverted.getHours() % 3 === 0;\r\n                    const temperatureFitted = temperatureZeroFit(numberFit(temperature));\r\n                    const windFitted = numberFit(windSpeed);\r\n                    return isRender ? (\r\n                      <TableRow key={item.time}>\r\n                        <TableCell>\r\n                          {`${hoursView(timeConverted.getHours())}: ${timeConverted.getMinutes()}0`}\r\n                        </TableCell>\r\n                        <TableCell>{`${temperatureFitted} °C`}</TableCell>\r\n                        <TableCell>{summary}</TableCell>\r\n                        <TableCell>{`${windFitted} м/с`}</TableCell>\r\n                      </TableRow>\r\n                    ) : null;\r\n                  })\r\n                : null}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n      <Map />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateOrAny) => ({\r\n  weather48Hours: state.weather48Hours,\r\n});\r\n\r\ninterface DispatchProps {\r\n  setNewCityToHistory: (history: HistoryItem) => void;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNewCityToHistory: (history: HistoryItem) => addCityToHistory(history),\r\n};\r\n\r\nexport default connect<MapStateProps, DispatchProps, OwnProps>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DayWeather);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n    paddingTop: 40,\r\n    backgroundColor: 'rgba(0, 0, 0, .5)',\r\n    zIndex: 5,\r\n  },\r\n  msgWrap: {\r\n    flexGrow: 0,\r\n    minWidth: 200,\r\n    minHeight: 50,\r\n    padding: 20,\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.text.secondary,\r\n    border: `1px solid ${theme.palette.primary.dark}`,\r\n    borderRadius: 7,\r\n    opacity: 0.8,\r\n  },\r\n}));\r\n\r\ninterface PopupMessageProps {\r\n  msg: string;\r\n}\r\n\r\nconst PopupMessage: React.FC<PopupMessageProps> = ({ msg }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.msgWrap}>{msg}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopupMessage;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  errorContainer: {\r\n    display: 'flex',\r\n    flexGrow: 0,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    maxWidth: 400,\r\n    padding: 40,\r\n    margin: '40px auto',\r\n    backgroundColor: theme.palette.background.default,\r\n    border: `1px solid ${theme.palette.primary.dark}`,\r\n    borderRadius: 10,\r\n    zIndex: 5,\r\n  },\r\n  titleWrap: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  title: {\r\n    margin: 0,\r\n    marginLeft: 30,\r\n    color: theme.palette.primary.dark,\r\n  },\r\n  info: {},\r\n}));\r\n\r\nconst ErrorIndicator = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <div className={styles.errorContainer}>\r\n      <div className={styles.titleWrap}>\r\n        <ErrorOutlineIcon color=\"primary\" fontSize=\"large\" />\r\n        <Typography variant=\"h1\" className={styles.title}>\r\n          BOOM!\r\n        </Typography>\r\n      </div>\r\n      <div className={styles.info}>\r\n        <Typography variant=\"body2\">\r\n          Something has gone terrribly wrong, but we already send droid to fix it.\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","/* eslint-disable react/state-in-constructor */\r\nimport React, { Component, ReactNode } from 'react';\r\n\r\nimport ErrorIndicator from './error-indicator';\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\ninterface ErrorState {\r\n  isWasError: boolean;\r\n}\r\n\r\nclass ErrorBoundry extends Component<Props> {\r\n  state: ErrorState = {\r\n    isWasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ isWasError: true });\r\n  }\r\n\r\n  render() {\r\n    const { isWasError } = this.state;\r\n    const { children } = this.props;\r\n    return isWasError ? <ErrorIndicator /> : children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { useState, useEffect } from 'react';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport theme from '../themes/theme';\nimport getCoordinates from '../services/get-coordinates';\nimport getWeatherByCoordinates from '../services/get-weather';\nimport { numberFit, temperatureZeroFit } from '../utils/temperature-fit';\nimport {\n  refreshCoordinates,\n  changeCity,\n  changeCountry,\n  changeWeatherInfo,\n  changeCurrentTemperature,\n  changeWeatherForNext48Hours,\n  changeWeatherWeek,\n} from '../redux/actions';\nimport { Coordinates, Weather48HoursProp, WeatherWeekProp } from '../types';\nimport { reverseGeocoding } from '../services/opencagedata';\n\n// components\nimport Navbar from './navbar';\nimport CurrentWeather from './current-weather';\nimport SavedCities from './saved-cities';\nimport Week from './week';\nimport DayWeather from './day-weather';\nimport PopupMessage from './popup-message';\nimport ErrorBoundry from './error-boundry';\n\n// contantas\nimport {\n  NAVBAR_BTNS,\n  FETCH_WEATHER_FAILED,\n  FETCH_GEOCODING_FAILED,\n  FETCH_COORDINATES_FAILED,\n} from '../constantas/common';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    position: 'relative',\n    maxWidth: 1200,\n    height: '95%',\n    margin: '20px auto',\n    boxShadow: theme.shadows[5],\n  },\n  sceleton: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  addBtn: {\n    position: 'absolute',\n    top: 70,\n    right: 10,\n  },\n}));\n\ninterface MapStateProps {\n  currentTab: string;\n  temperature: number;\n  coordinates: Coordinates;\n}\n\ninterface DispatchProps {\n  setCoordinates: (data: Coordinates) => void;\n  setCity: (str: string) => void;\n  setCountry: (str: string) => void;\n  setWeatherInfo: (str: string) => void;\n  setCurrentTemperature: (numb: number) => void;\n  setWeather48hours: (data: Weather48HoursProp) => void;\n  setWeatherWeek: (data: any) => void;\n}\n\ntype AppProps = MapStateProps & DispatchProps;\n\nconst App = (props: AppProps) => {\n  const {\n    temperature,\n    currentTab,\n    coordinates,\n    setCoordinates,\n    setCity,\n    setCountry,\n    setWeatherInfo,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherWeek,\n  } = props;\n\n  const styles = useStyles();\n  const [isShowPopup, setIsShowPopup] = useState<boolean>(false);\n  const [msg, setMsg] = useState<string>('Все в порядке!');\n\n  useEffect(() => {\n    let timerId: any;\n    getCoordinates()\n      .then((data) => {\n        const { latitude, longitude } = data;\n\n        setCoordinates({ latitude, longitude });\n      })\n      .catch((e) => {\n        console.log('getCoordinates error: ', e);\n        setMsg(FETCH_COORDINATES_FAILED);\n        timerId = setTimeout(() => {\n          setIsShowPopup(false);\n        }, 1000);\n      });\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [\n    setCoordinates,\n    setCity,\n    setCountry,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherInfo,\n    setWeatherWeek,\n  ]);\n\n  useEffect(() => {\n    const { latitude, longitude } = coordinates;\n    let timerId: any;\n    if (latitude && longitude) {\n      reverseGeocoding(latitude, longitude)\n        .then((data) => {\n          const { city, country } = data.results[0].components;\n          setCity(city);\n          setCountry(country);\n          // if (city) {\n          //   window.history.pushState({ page: city }, city, `city=${city}`);\n          // }\n        })\n        .catch((e) => {\n          console.log('reverseGeocoding error: ', e);\n          setIsShowPopup(true);\n          setMsg(FETCH_GEOCODING_FAILED);\n          timerId = setTimeout(() => {\n            setIsShowPopup(false);\n          }, 1000);\n        });\n      getWeatherByCoordinates(latitude, longitude, 'ru')\n        .then((weather) => {\n          setWeather48hours(weather.hourly);\n          setWeatherWeek(weather.daily);\n\n          const numberFitted = temperatureZeroFit(numberFit(weather.currently.temperature));\n          setCurrentTemperature(numberFitted);\n          const windFitted = numberFit(weather.currently.windSpeed);\n\n          const txt = `${weather.currently.summary}, Ветер - ${windFitted} м/с`;\n          setWeatherInfo(txt);\n        })\n        .catch((e) => {\n          console.log('getWeatherByCoordinates error: ', e);\n          setIsShowPopup(true);\n          setMsg(FETCH_WEATHER_FAILED);\n          timerId = setTimeout(() => {\n            setIsShowPopup(false);\n          }, 1000);\n        });\n    } else {\n      setMsg(FETCH_GEOCODING_FAILED);\n      timerId = setTimeout(() => {\n        setIsShowPopup(false);\n      }, 1000);\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [\n    coordinates,\n    setCity,\n    setCountry,\n    setCurrentTemperature,\n    setWeather48hours,\n    setWeatherInfo,\n    setWeatherWeek,\n  ]);\n  const componentMaps = new Map();\n  componentMaps.set(NAVBAR_BTNS[0], <SavedCities />);\n  componentMaps.set(NAVBAR_BTNS[1], <DayWeather title={NAVBAR_BTNS[1]} />);\n  componentMaps.set(NAVBAR_BTNS[2], <DayWeather title={NAVBAR_BTNS[2]} />);\n  componentMaps.set(NAVBAR_BTNS[3], <Week />);\n  return (\n    <ThemeProvider theme={theme}>\n      <ErrorBoundry>\n        <CssBaseline />\n        {isShowPopup ? <PopupMessage msg={msg} /> : null}\n        <div className={styles.container}>\n          <Navbar />\n          {temperature === null ? (\n            <div className={styles.sceleton}>\n              <Skeleton variant=\"circle\" width={50} height={50} className={styles.addBtn} />\n              <Skeleton variant=\"text\" width={50} height={70} />\n              <Skeleton variant=\"text\" width={300} height={50} />\n              <Skeleton variant=\"rect\" width={300} height={118} />\n            </div>\n          ) : (\n            <CurrentWeather />\n          )}\n          {componentMaps.get(currentTab)}\n        </div>\n      </ErrorBoundry>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = (state: RootStateOrAny) => ({\n  currentTab: state.currentTab,\n  temperature: state.temperature,\n  coordinates: state.coordinates,\n});\n\nconst mapDispatchToProps = {\n  setCoordinates: (data: Coordinates) => refreshCoordinates(data),\n  setCity: (str: string) => changeCity(str),\n  setCountry: (str: string) => changeCountry(str),\n  setWeatherInfo: (str: string) => changeWeatherInfo(str),\n  setCurrentTemperature: (numb: number) => changeCurrentTemperature(numb),\n  setWeather48hours: (data: Weather48HoursProp) => changeWeatherForNext48Hours(data),\n  setWeatherWeek: (data: WeatherWeekProp) => changeWeatherWeek(data),\n};\n\nexport default connect<MapStateProps, DispatchProps>(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n  REFRESH_COORDINATES,\r\n  CHANGE_CURRENT_TAB,\r\n  CHANGE_CITY,\r\n  CHANGE_COUNTRY,\r\n  CHANGE_TODAY_WEATHER_INFO,\r\n  CHANGE_CURRENT_TEMPERATURE,\r\n  CHANGE_WEATHER_FOR_NEXT_48_HOURS,\r\n  CHANGE_WEEK_WEATHER,\r\n  ADD_CITY_TO_HISTORY,\r\n  DELETE_CITY_FROM_HISTORY,\r\n  CLEAR_HISTORY,\r\n} from './action-types';\r\nimport { NAVBAR_BTNS, CITIES_LIST } from '../constantas/common';\r\nimport { StoreType } from '../types';\r\nimport FAKE_HISTORY from '../services/fake-history';\r\n\r\nconst ls = localStorage.getItem(CITIES_LIST);\r\nconst history = ls === null ? FAKE_HISTORY : JSON.parse(ls);\r\n// HistoryItem  is shape of {\r\n//   color,\r\n//   id,\r\n//   city,\r\n//   coordinates,\r\n// }\r\n\r\nconst initialState: StoreType = {\r\n  currentTab: NAVBAR_BTNS[0],\r\n  coordinates: {\r\n    latitude: 0,\r\n    longitude: 0,\r\n  },\r\n  city: '',\r\n  country: '',\r\n  temperature: null,\r\n  weatherInfo: '',\r\n  weather48Hours: null,\r\n  weatherWeek: null,\r\n  history,\r\n};\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case REFRESH_COORDINATES:\r\n      return {\r\n        ...state,\r\n        coordinates: action.coordinates,\r\n      };\r\n    case CHANGE_CURRENT_TAB:\r\n      return {\r\n        ...state,\r\n        currentTab: action.currentTab,\r\n      };\r\n    case CHANGE_CITY:\r\n      return {\r\n        ...state,\r\n        city: action.city,\r\n      };\r\n    case CHANGE_COUNTRY:\r\n      return {\r\n        ...state,\r\n        country: action.country,\r\n      };\r\n    case CHANGE_TODAY_WEATHER_INFO:\r\n      return {\r\n        ...state,\r\n        weatherInfo: action.weatherInfo,\r\n      };\r\n    case CHANGE_CURRENT_TEMPERATURE:\r\n      return {\r\n        ...state,\r\n        temperature: action.temperature,\r\n      };\r\n    case CHANGE_WEATHER_FOR_NEXT_48_HOURS:\r\n      return {\r\n        ...state,\r\n        weather48Hours: action.weather48Hours,\r\n      };\r\n    case CHANGE_WEEK_WEATHER:\r\n      return {\r\n        ...state,\r\n        weatherWeek: action.weatherWeek,\r\n      };\r\n    case ADD_CITY_TO_HISTORY:\r\n      return {\r\n        ...state,\r\n        history: [...state.history, action.history],\r\n      };\r\n    case DELETE_CITY_FROM_HISTORY:\r\n      return {\r\n        ...state,\r\n        history: state.history.filter((item) => item.id !== action.id),\r\n      };\r\n    case CLEAR_HISTORY:\r\n      return {\r\n        ...state,\r\n        history: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export default [\r\n  {\r\n    id: 'aaa-AAA_999999:0',\r\n    city: 'Барнаул',\r\n    coordinates: {\r\n      latitude: 53.3606,\r\n      longitude: 83.7636,\r\n    },\r\n    color: '#FFAA22',\r\n  },\r\n  {\r\n    id: 'aaa-AAA_999999:1',\r\n    city: 'Москва',\r\n    coordinates: {\r\n      latitude: 55.7504461,\r\n      longitude: 37.6174943,\r\n    },\r\n    color: '#55AA22',\r\n  },\r\n  {\r\n    id: 'aaa-AAA_999999:2',\r\n    city: 'Красноярск',\r\n    coordinates: {\r\n      latitude: 56.0090968,\r\n      longitude: 92.8725147,\r\n    },\r\n    color: '#BBAA22',\r\n  },\r\n];\r\n","import store from './store';\r\nimport { ADD_CITY_TO_HISTORY, CLEAR_HISTORY, DELETE_CITY_FROM_HISTORY } from './action-types';\r\nimport { CITIES_LIST } from '../constantas/common';\r\n\r\nconst middleware = () => {\r\n  return (next: any) => {\r\n    return (action: any) => {\r\n      if (action.type === ADD_CITY_TO_HISTORY) {\r\n        const state = store.getState();\r\n        const newHistory = [...state.history, action.history];\r\n\r\n        localStorage.removeItem(CITIES_LIST);\r\n        localStorage.setItem(CITIES_LIST, JSON.stringify(newHistory));\r\n      }\r\n      if (action.type === CLEAR_HISTORY) {\r\n        localStorage.removeItem(CITIES_LIST);\r\n      }\r\n      if (action.type === DELETE_CITY_FROM_HISTORY) {\r\n        const state = store.getState();\r\n        const newHistory = state.history.filter((item) => item.id !== action.id);\r\n\r\n        localStorage.removeItem(CITIES_LIST);\r\n        localStorage.setItem(CITIES_LIST, JSON.stringify(newHistory));\r\n      }\r\n      return next(action);\r\n    };\r\n  };\r\n};\r\n\r\nexport default middleware;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducer from './reducer';\r\nimport middleware from './middleware';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, storeEnhancers(applyMiddleware(middleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './components/app';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}